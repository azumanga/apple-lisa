(*  (c) copyright 1983, 1984  Apple Computer Inc.  *)

Unit osunitio;            (* contains the unitio proc for blockio support *)

Interface
  USES
  (*$U object/driverdefs.obj*)
       driverdefs,
  (*$U object/sysglobal.obj*)
       globalda,
  (*$U object/procprims.obj *)
       proc_prims,
  (*$U object/mmprim.obj *)
       mmprimitives,
  (*$U object/asynctr.obj *)
       asynctr,
  (*$U object/genio.obj *)
       genio,
  (*$U object/twiggy.obj *)
       twiggy,
  (*$U object/vmstuff.obj *)
       vmstuff;

procedure unitio (var errnum : integer; devnum : integer; bufadr : absptr;
                  numblocks : longint; blocknum : longint; var actual : longint;
                  mode : disk_io_type; op : ioop);
    (* a subsitute routine for unitread and unitwrite,
       it reads/writes multiple blocks *)

Implementation

procedure unitio (* var errnum : integer; devnum : integer; bufadr : absptr;
                    numblocks : longint; blocknum : longint; var actual : longint;
                    mode : disk_io_type; op : ioop *);
    (* a subsitute routine for unitread and unitwrite,
       it reads/writes multiple blocks *)

label
  1;

const

  blkiolevel = 50;             (* trace level *)

var
   fake_ptr : plrecpt;

begin
  (*$IFC DEBUG2*)
    if trace (spare4, blkiolevel) then
      writeln ('e unitio: devnum =', devnum, ' bufadr =', bufadr, ' numblocks =',
                numblocks, 'blocknum =', blocknum, 'mode = ',ord(mode));
  (*$ENDC*)

  (*$IFC OS15*)
  if configinfo[devnum]^.devt <> non_io then
    UP(errnum,configinfo[devnum],nil);
  if errnum > 0 then goto 1;
  (*$ENDC*)

  if numblocks > 0 then
      lisaio(errnum, devnum, bufadr, blocknum, numblocks, actual,
                        mode, nil, op);
                                                     (* read all blocks at a time *)
1:
  (*$IFC DEBUG2*)
    if trace (spare4, blkiolevel) then
      writeln ('l unitio: errnum = ',errnum,'actual = ',actual);
  (*$ENDC*)
end;  (* procedure unitio *)


end.
ÿ