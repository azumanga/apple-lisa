
UNIT DRIVERSUBS; (* UNIT NEEDED BY CONFIGURABLE DRIVERS *)

      (*  Copyright 1983, 1984, Apple Computer Inc. *)

INTERFACE
  USES
    (*$Uobject/driverdefs.obj*)
      driverdefs;


  procedure CANCEL_REQ (req: reqptr_type);

  procedure ENQUEUE(var newlink,leftlink: linkage; b_sysarea: absptr);

  procedure DEQUEUE(var link: linkage; b_sysarea: absptr);

  procedure RELSPACE(ordaddr: absptr; b_area: absptr);

  function GETSPACE(amount: int2; b_area: absptr;
                                       var ordaddr: absptr): boolean;

  procedure SYSTEM_ERROR(errnum: int2);

  function TRACE (part:osportion; level:integer) : boolean;

  procedure MACH_INFO(var error : integer; var the_info: minfo);

  procedure unblk_req (reqptr : reqptr_type;
                         success_f: boolean);

  procedure blk_req (reqptr_list : reqptr_type;
                     var first_reqptr : reqptr_type);

  procedure IODONE (port_ptr: hdiskcb_ptr; prev_err: integer);

  procedure FREEZE_SEG(var errnum: int2; c_sdb: absptr; offset: int4;
                         ioreq_addr: absptr; var buffaddr: absptr );

  procedure UNFREEZE_SEG(c_sdb: absptr);

  procedure ADJ_IO_CNT(inc_io_count: boolean; c_sdb: absptr);

  procedure CVT_BUFF_ADDR(var errnum: int2; mem_writeF: boolean; buffaddr: absptr;
                            byte_cnt: int4; var ordsdb: absptr; var offset: int4);

  procedure CALLDRIVER (var errnum: integer; config_ptr: ptrdevrec;
                                               parameters: param_ptr);

  procedure INTSOFF ( level: intsoff_type; var status: intson_type);

  procedure INTSON (status: intson_type);

  function ALLSET (b1, b2: int1): boolean;

  function LOGGING: boolean;

  procedure LOG (var errnum: integer; ptr_arr: longint);

  function CHAIN_FORWARD (current: linkage): reqptr_type;

  procedure DISKSYNC (busy: boolean);

  function MICROTIMER: longint;

  procedure ALARM_ASSIGN (var alarm: integer; pdr: ptrdevrec; status: intson_type);

  procedure ALARMRETURN (alarm: integer);

  procedure ALARMRELATIVE (alarm: integer; delay: longint);

  procedure ALARMOFF (alarm: integer);

  procedure LINK_TO_PCB (req_ptr: reqptr_type);

  procedure Use_Hdisk(configptr: ptrdevrec);

  procedure Call_Hdisk(var error: int2; configptr: ptrdevrec; parameters: param_ptr);

  function OKXFERNEXT(port_ptr: hdiskcb_ptr): integer;

  procedure KEYPUSHED (key: int1);


IMPLEMENTATION

  procedure CANCEL_REQ;
  external;

  procedure ENQUEUE;
  external;

  procedure DEQUEUE;
  external;

  procedure RELSPACE;
  external;

  function GETSPACE;
  external;

  procedure SYSTEM_ERROR;
  external;

  function TRACE;
  external;

  procedure MACH_INFO;
  external;

  procedure unblk_req;
  external;

  procedure blk_req;
  external;

  procedure IODONE;
  external;

  procedure FREEZE_SEG;
  external;

  procedure UNFREEZE_SEG;
  external;

  procedure ADJ_IO_CNT;
  external;

  procedure CVT_BUFF_ADDR;
  external;

  procedure CALLDRIVER;
  external;

  procedure INTSOFF;
  external;

  procedure INTSON;
  external;

  function ALLSET;
  external;

  function LOGGING;
  external;

  procedure LOG;
  external;

  function CHAIN_FORWARD;
  external;

  procedure DISKSYNC;
  external;

  function MICROTIMER;
  external;

  procedure ALARM_ASSIGN;
  external;

  procedure ALARMRETURN;
  external;

  procedure ALARMRELATIVE;
  external;

  procedure ALARMOFF;
  external;

  procedure LINK_TO_PCB;
  external;

  procedure Use_Hdisk;
  external;

  procedure Call_Hdisk;
  external;

  function OKXFERNEXT;
  external;

  procedure KEYPUSHED;
  external;

end.

ÿ