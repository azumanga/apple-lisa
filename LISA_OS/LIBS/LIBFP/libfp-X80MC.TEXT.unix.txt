; Copyright 1983, Apple Computer Inc.
        
; File L:X80MC, Version 30 January 1983.

; F-line trapping register conventions:
        
        ; A0 is used by the OS F-line trap handler to transfer the PC where
; an F-line trap occurred to the routine which calls the floating point
; package.
        
        ; A1 is used by x80%arith routines to contain the storage address of an operand.
        
        ; A2 is used by x80%arith routines to hold the return address of the routine.
        
        ; D0 is used by x80%arith routines to hold immediate data and by
; x80%paddr to contain the count K for a binary to bcd
; conversion.

        .proc   x80%fsetup
        
;       procedure x80%fsetup ;
;       sets up the monitor or os fline trap vector and handler.

        debugbegin
        .if     xfline=1
        .ref    x80%monfline,x80%osfp
        tst.b   osflag(a5)
        beq.s   os              ; Branch if running under OS.
mon     
        pea     x80%monfline    
        move.l  (sp)+,flinevector ; Set up 2C to point to x80%monfline.
        rts
os
        move    #$4EF9,flinejump(a5) ; Set up JMP.
        lea     x80%osfp,a0     ; A0 gets the address of the fp package.
        move.l  a0,flinejump+2(a5) ; Set effective address for jump.
        .endc
        rts
        debugend 'X80%FSET',0
        
        .proc   x80%mc          ;  Segment x80. 
        
mc_usermem 
        debugbegin
        tst     d7
        bmi.s   store
        subq    #1,d7
userfetch 
        move.b  (a3)+,(a2)+
        dbf     d7,userfetch
        rts
store   neg     d7
        subq    #1,d7
userstore move.b  (a2)+,(a3)+
        dbf    d7,userstore
        rts
        debugend 'MC_USERM',0
        
        .macro  callmc           ; Does the call to MC 68341.
        movem.l a0-a7/d0-d7,-(sp)     ; Save registers.
        getfpcb a1              ; A1 gets address of FPCB_.
       ;adda.l  #fpptv,a1       ; A1 gets address of Pascal floating
                                ; point trap vector.
        movea.l a1,a3
        adda.l  #fpcb,a3        ; A3 gets address of Motorola fpcb.
        lea     mc_usermem,a4   ; A4 gets address of user memory routine.
        movea.l sp,a5           ; A5 gets address of "old D0".
        .ref    mc_frnt
        jsr     mc_frnt
        movem.l (sp)+,a0-a7/d0-d7 ; Restore registers.
        .endm

        .if     xfline=0
        
        .def    x80_flinefake
        
; Monitor/OS F-line fake routine.

x80_flinefake
        debugbegin
        move    sr,-(sp)        ; Push status.
        callmc
        rtr                     ; Return from simulated exception.
        debugend 'X80_FLIN',0
        
        .else
        
        .def    x80%monfline,x80%osfp
        
; procedure x80%monfline
; Monitor F line trap handler that will set up and call MC 68341.
; Expects to be called via an actual F-line trap and exits via RTE.

x80%monfline
        debugbegin
        callmc
        rte                     ; Return from exception.
        debugend 'X80%MONF',0

; procedure x80%osfp
; OS F line pseudo-trap handler that will set up and call MC 68341.
; Expects to be called via osfline and exits via RTR.

x80%osfp
        debugbegin
        move.l  a0,-(sp)        ; Push PC of F-line op code.
        move    sr,-(sp)        ; Push status.
        callmc
        rtr                     ; Return from simulated exception.
        debugend 'X80%OSFP',0
        .endc

ÿ