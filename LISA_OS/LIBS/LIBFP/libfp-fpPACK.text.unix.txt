;-----------------------------------------------------------
; 03JUL82: WRITTEN BY JEROME COONEN
;
; ASSUME REGISTER MASK: POST COERCE, WITH DIRTY INDEX IN D0
; HAVE RESULT SIGN IN D7, EXP IN A4, DIGS IN D4,5
; CRUCIAL THAT EXTRANEOUS SIGNIFICANT BITS BE CLEAR.
; USE D3 FOR EXP COMPUTATIONS.
;-----------------------------------------------------------

PACK:
        ANDI.W  #$000E,D0               ; KILL EXTRANEOUS BITS

        .IF PCOK
        MOVE.W  PACKCASE(PC,D0),D0
        .ELSE
        MOVE.W  PACKCASE(D0),D0
        .ENDC

        MOVEA.L LKADR1(A6),A3           ; LOAD DST ADRS

;-----------------------------------------------------------
; USE TRICK TO SPARE SEVERAL COMPARISONS.
;-----------------------------------------------------------
        MOVE.W  A4,D3                   ; GET EXP
        CMPI.W  #$7FFF,D3               ; INF OR NAN?

        .IF PCOK
        JMP     PACK(PC,D0)
        .ELSE
        JMP     PACK(D0)
        .ENDC

PACKCASE:
        .WORD   PACKEXT - PACK           ; EXTENDED
        .WORD   PACKDBL - PACK           ; DOUBLE
        .WORD   PACKSGL - PACK           ; SINGLE
        .WORD   0
        .WORD   PACKI16 - PACK           ; INT16
        .WORD   PACKI32 - PACK           ; INT32
        .WORD   PACKC64 - PACK           ; COMP64

;-----------------------------------------------------------
; INT16: JUST STORE.
;-----------------------------------------------------------
PACKI16:
        MOVE.W  D5,(A3)
        RTS


;-----------------------------------------------------------
; INT32: CHECK FOR MAX EXP TO STORE MAX NEG INT, WHILE
;       SIGNALING INVALID.
;-----------------------------------------------------------
PACKI32:
        MOVE.L  D5,(A3)
        RTS

;-----------------------------------------------------------
; COMP64: CHECK FOR NAN CASE, BUT NO SIGNAL.
;-----------------------------------------------------------
PACKC64:
        MOVE.L  D4,(A3)+
        MOVE.L  D5,(A3)
        RTS


;-----------------------------------------------------------
; NOT SO EASY TO PACK AN EXTENDED.  JUST STUFF THE SIGN;
; BUT BE SURE TO NORMALIZE UNDERFLOWED S,D DENORMALS.
;-----------------------------------------------------------
PACKEXT:
        BTST    #ERRU+8,D6      ; UNDERFLOW
        BEQ.S   @7              ; OK IF NO UFLOW

        TST.W   D3              ; MIN EXP?
        BEQ.S   @7              ; IF 0, NO PROBLEM

        TST.L   D4              ; NORMALIZED OR NONZERO?
        BNE.S   @5

        TST.L   D5              ; IF ZERO THEN FORCE 0
        BNE.S   @1              ; UNNORM BY > 32 BITS!

        CLR.L   D3              ; FORCE ZERO EXP
        BRA.S   @7
@1:
        SUBQ.W  #1,D3           ; DEC EXP
        ADD.L   D5,D5
        ADDX.L  D4,D4
@5:
        BPL.S   @1              ; PLS -> UNNORM
@7:
        TST.B   D6              ; NEGATIVE?
        BPL.S   @11
        ADDI.W  #$8000,D3       ; STUFF NEG SIGN
@11:
        MOVE.W  D3,(A3)+
        MOVE.L  D4,(A3)+
        MOVE.L  D5,(A3)
        RTS


;-----------------------------------------------------------
; PACK SINGLE: IF INF OR NAN PLACE TOO BIG EXP AND COUNT
; ON LEAD BIT=0 TO FORCE EXP DECREMENT.
;-----------------------------------------------------------
PACKSGL:
        BNE.S   @1              ; NE -> INF OR NAN
        MOVE.W  #$4080,D3       ; EXP TOO BIG, WILL DEC
        BRA.S   @5
@1:
        TST.W   D3              ; EXP = 0?
        BNE.S   @5
        MOVE.W  #$3F81,D3
@5:
        SUBI.W  #$3F80,D3
        ADD.L   D4,D4           ; KILL LEAD BIT AND TEST
        BCS.S   @7              ; DEC EXP UNLESS NORMAL
        SUBQ.W  #1,D3
@7:
        OR.W    D3,D4           ; STUFF EXP IN LOW BITS
        ROR.L   #8,D4
        ADD.B   D6,D6           ; GET SIGN INTO X
        ROXR.L  #1,D4           ; SHOVE SIGN
        MOVE.L  D4,(A3)
        RTS


;-----------------------------------------------------------
; PACK DOUBLE:
;-----------------------------------------------------------
PACKDBL:
        BNE.S   @1              ; NE -> INF OR NAN
        MOVE.W  #$4400,D3       ; EXP TOO BIG, WILL DEC
        BRA.S   @5
@1:
        TST.W   D3              ; EXP = 0?
        BNE.S   @5
        MOVE.W  #$3C01,D3
@5:
        SUBI.W  #$3C00,D3
        TST.L   D4              ; KILL LEAD BIT AND TEST
        BMI.S   @7              ; DEC EXP UNLESS NORMAL
        SUBQ.W  #1,D3
@7:

;-----------------------------------------------------------
; SET UP LOW 32 BITS WITH TRAILING 11 BITS FROM HI BITS.
;-----------------------------------------------------------
        MOVE.L  #$000007FF,D0   ; MASK HI BITS OF 2ND HALF
        AND.L   D4,D0
        OR.L    D0,D5
        ROR.L   #8,D5
        ROR.L   #3,D5           ; NOW LO 32 BITS READY

        ANDI.W  #$0F800,D4      ; CLEAR LO BITS JUST USED
        ADD.L   D4,D4           ; KILL LEAD BIT
        OR.W    D3,D4           ; PLACE EXP
        ROR.L   #8,D4
        ROR.L   #3,D4
        ADD.B   D6,D6           ; SIGN TO X
        ROXR.L  #1,D4

        MOVE.L  D4,(A3)+
        MOVE.L  D5,(A3)
        RTS

ÿ