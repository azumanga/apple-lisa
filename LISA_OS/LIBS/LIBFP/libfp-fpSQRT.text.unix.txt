;-----------------------------------------------------------
; 03JUL82: WRITTEN BY JEROME COONEN
; 12AUG82: TIDIED UP (JTC)
; 12DEC82: PROJ MODE OUT (JTC)
;
; THIS SQUARE ROOT ALGORITHM IS OPTIMIZED FOR SIZE.
; A SOMEWHAT FASTER ALGORITHM (THAT TAKES ADVANTAGE OF
; TRAILING 0'S AT THE BEGINNING AND END OF THE ALGORITHM)
; REQUIRES MORE THAN TWICE THE SPACE.
;-----------------------------------------------------------
SQRTTOP:
        CMPI.W  #2,D3           ; IS THE OPERAND 0?
        BNE.S   @1
        RTS                     ; ROOT(+-0) = +-0
@1:
        MOVEQ   #nanSQRT,D0     ; CODE BYTE, JUST IN CASE
        TST.B   D6              ; NEGATIVE, POSSIBLY INF?
        BMI     INVALIDOP       ; WHETHER NUM OR INF

        CMPI.W  #4,D3           ; IS THE OPERAND +INF?
        BNE.S   @10
        
        RTS                     ; ROOT(AFF +INF) = +INF
@10:

;-----------------------------------------------------------
; THIS ALGORITHM IS THE EXACT ANALOG OF EVERYMAN'S GRAMMAR
; SCHOOL METHOD.  EXCEPT THAT IN BINARY IT'S EASIER.
; IN DECIMAL EACH STEP BEGINS WITH THE CRYPTIC OPERATION:
; "DOUBLE THE CURRENT ROOT, ADD A -BLANK- TO BE FILLED
; WITH THE LARGEST NEXT-ROOT-DIGIT POSSIBLE."
; IN BINARY THIS TRANSLATES TO: "APPEND TO THE CURRENT
; ROOT THE BITS 01 AND ATTEMPT A SUBTRACT; IF IT GOES,
; THE NEXT ROOT BIT IS 1, ELSE IT'S 0 SO ADD THE DEFICIT
; BACK."  THE ONLY NUISANCE IS THAT THE OPERATION IS WIDE:
; THE APPENDED 01 MEANS THAT ESSENTIALLY 66 BITS ARE LOOKED
; AT EACH TIME.
;
; THE BASIC REGISTER MASK IS:
;       ROOT:   D0.B   D4   D5
;       RAD:    D1.B   D2   D3   D6   D7
;       SAVE:   D6->A1      D7->A2
;       LOOP:   COUNTERS IN A3, ... SWAPPED IN WHEN USED
;
; FIRST STEP IS TO HALVE THE EXPONENT AND ADJUST THE BIAS.
; SINCE BIAS IS 3FFF, SHIFT OUT OF RIGHT SIDE IS 1 PRECISELY
; WHEN THE TRUE EXP IS EVEN.
; CASES, AFTER RIGHT SHIFT:
;       C=1: (2K) + 3FFF -> K + 1FFF, SO REBIAS BY 2000.
;       C=0: (2K + 1) + 3FFF -> K + 2000, SO REBIAS BY 1FFF
;               AND SHIFT RADICAND 1 EXTRA BIT LEFT
;
; NOTE THAT 16-BIT OPERATIONS SUFFICE, THOUGH THE EXP IS
; KEPT TO 32 BITS.  THE LAST "MOVEA.W" EXTENDS BACH TO 32.
;-----------------------------------------------------------
        MOVE.W  A4,D0           ; CONVENIENT FOR SHIFTING
        ASR.W   #1,D0
        MOVE    SR,D1           ; SAVE FLAGS FOR LATER
        BCC.S   @12
        ADDQ.W  #1,D0
@12:
        ADDI.W  #$1FFF,D0       ; REBIAS
        MOVEA.W D0,A4           ; REPLACE SHIFTED EXP

;-----------------------------------------------------------
; INITIALIZE REGISTERS FOR ROOTING.  USE A1,A2 AS TEMPS.
;-----------------------------------------------------------
        MOVEA.L D6,A1           ; CLEAR RADICAND AREA
        MOVEA.L D7,A2
        MOVE.L  D5,D7           ; INIT RADICAND
        MOVE.L  D4,D6
        CLR.L   D3
        MOVE.L  D3,D2

;-----------------------------------------------------------
; NOW SHIFT RADICAND TO ALIGN BINARY POINT BETWEEN D3 AND
; D6.   REQUIRES 1 SHIFT FOR EVEN EXP, 2 SHIFTS FOR ODD,
; FOR WHICH WE SAVED FLAGS ABOVE IN D1.
;-----------------------------------------------------------
        ADD.L   D7,D7           ; ALWAYS SHIFT ONCE
        ADDX.L  D6,D6
        ADDX.W  D3,D3

        MOVE    D1,CCR          ; C=0 -> ODD -> EXTRA
        BCS.S   @14

        ADD.L   D7,D7
        ADDX.L  D6,D6
        ADDX.W  D3,D3
@14:

;-----------------------------------------------------------
; INITIALIZE ROOT: BECAUSE NUMBERS ARE NORMALIZED, KNOW
; FIRST ROOT BIT IS 1, SO CAN BYPASS FIRST STEP BY SUBTRACT
; FROM "INTEGER" RADICAND PART IN D3 AND BY FORCING 1 BIT
; IN LOW-ORDER ROOT.  TRICK ABOUT ROOT IS THAT BEFORE EACH
; STEP ROOT HAS FORM: <CURRENT ROOT>01
; AND AFTER:          <NEW      ROOT>1
; SO THE INIT VALUE:  0000000000000011
;-----------------------------------------------------------
        MOVE.L  D2,D0           ; SET ROOT TO 000...0011
        MOVE.L  D2,D4
        MOVEQ   #3,D5

        SUBQ.W  #1,D3           ; FIRST STEP REDUCTION

;-----------------------------------------------------------
; NOW THE MAIN LOOP: SHIFT THE RADICAND LEFT 2 BITS;
; SHIFT THE ROOT: <ROOT>1 -> <ROOT>01 AND SUBTRACT.
; NEED STICKY BITS AND SCAN OF FINAL RADICAND TO GET FULL
; PRECISION.  BECAUSE OF REGISTER OVERFLOW, KEEP COUNTER
; IN A3.
;-----------------------------------------------------------
        MOVEQ   #65,D1
        MOVEA.W D1,A3
        CLR.L   D1
@20:
        ADD.L   D7,D7           ; RADICAND LEFT BY 2
        ADDX.L  D6,D6
        ADDX.L  D3,D3
        ADDX.L  D2,D2
        ADDX.W  D1,D1
        ADD.L   D7,D7
        ADDX.L  D6,D6
        ADDX.L  D3,D3
        ADDX.L  D2,D2
        ADDX.W  D1,D1

        ADD.L   D5,D5           ; ROOT LEFT BY 1 AND FIX
        ADDX.L  D4,D4
        ADDX.W  D0,D0
        SUBQ.W  #1,D5           ; XXX10 -> XXX01

;-----------------------------------------------------------
; TRY RADICAND - ROOT
;-----------------------------------------------------------
        SUB.L   D5,D3
        SUBX.L  D4,D2
        SUBX.W  D0,D1
        BCC.S   @22             ; NO CARRY -> ROOT = 1

        ADD.L   D5,D3
        ADDX.L  D4,D2
        ADDX.W  D0,D1
        BRA.S   @24
@22:
        ADDQ.W  #2,D5           ; SET ROOT BIT TO 1
@24:
        EXG     D0,A3
        SUBQ.W  #1,D0
        EXG     D0,A3
        BNE.S   @20

;-----------------------------------------------------------
; AFTER LOOP HAVE 66 BITS PLUS APPENDED 1 IN D0,4,5.
; ALAS, CAN'T USE GENERAL RIGHT SHIFTER BECAUSE OF D0 STUFF.
; Q: CAN WE PROVE THAT OR-ING TOGETHER LAST RADICAND ISN'T
; NEEDED?
; FACT: SINCE DID 65 STEPS OF LEFT SHIFT, D6,7 ARE NOW 0.
;-----------------------------------------------------------
        MOVE.L  A1,D6           ;RESTORE OPWORD ETC.
        MOVE.L  A2,D7

        OR.L    D2,D1
        OR.L    D3,D1
        BNE.S   @30
        SUBQ.W  #1,D5           ; KILL THIS IF NO STICKIES
@30:
        MOVEQ   #3,D1           ; RIGHT SHIFT COUNT
@32:
        LSR.W   #1,D0
        ROXR.L  #1,D4
        ROXR.L  #1,D5
        ROXR.W  #1,D7           ; ROUND BITS (NO SHIFT OUT)
        SUBQ.W  #1,D1
        BNE.S   @32

        BRA     COERCE

ÿ