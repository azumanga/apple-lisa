;-----------------------------------------------------------
; 03JUL82: WRITTEN BY JEROME COONEN
; 12AUG82: SINGLE CASE FIXED UP (JTC)
;
; ASSUME REGISTER MASK: DO-ARITHMETIC
;-----------------------------------------------------------

DIVTOP:
        ROL.B   #2,D6           ; GET XOR SIGNS
        MOVEQ   #nanDIV,D0      ; JUST IN CASE...

        .IF PCOK
        MOVE.W  DIVCASE(PC,D3),D3
        JMP     DIVTOP(PC,D3)
        .ELSE
        MOVE.W  DIVCASE(D3),D3
        JMP     DIVTOP(D3)
        .ENDC

DIVCASE:                                   ; DST / SRC
        .WORD   DIVNUM    - DIVTOP         ; NUM / NUM
        .WORD   DIVBY0    - DIVTOP         ; NUM / 0
        .WORD   DIVBYI    - DIVTOP         ; NUM / INF

        .WORD   RDST      - DIVTOP         ;   0 / NUM
        .WORD   INVALIDOP - DIVTOP         ;   0 / 0
        .WORD   RDST      - DIVTOP         ;   0 / INF

        .WORD   RDST      - DIVTOP         ; INF / NUM
        .WORD   RDST      - DIVTOP         ; INV / 0
        .WORD   INVALIDOP - DIVTOP         ; INV / INF


;-----------------------------------------------------------
; DIV BY ZERO: SET THE ERROR BIT, STUFF INF, RET.
;-----------------------------------------------------------
DIVBY0:
        BSET    #ERRZ+8,D6
        MOVEA.W #$7FFF,A4       ; BIG EXP
        CLR.L   D4              ; ZERO DIGS
        MOVE.L  D4,D5
        RTS


;-----------------------------------------------------------
; DIV BY INF: STORE 0 AND RET.
;-----------------------------------------------------------
DIVBYI:
        SUBA.L  A4,A4           ; ZERO EXP
        MOVE.L  A4,D4           ; AND DIGS...
        MOVE.L  D4,D5
        RTS


;-----------------------------------------------------------
; DIVIDING NUMBERS INVOLVES THE RESTORING DIVIDE ALGORITHM
; SHARED WITH REMAINDER BIN->BCD CONVERSION.  TO EXPEDITE
; SINGLE CASES, TEST FOR COERCION WITH SHORT OPERANDS.
;-----------------------------------------------------------
DIVNUM:

;-----------------------------------------------------------
; FIGURE RESULT EXPONENT AS THOUGH DST >= SRC.  WILL COMPUTE
; AN EXTRA QUOTIENT BIT JUST IN CASE DST < SRC, IN WHICH
; CASE EXP WILL BE DECREMENTED.
;-----------------------------------------------------------
        EXG     A3,A4           ; SWAP EXPS
        SUBA.L  A3,A4           ; DEXP - SEXP
        ADDA.W  #$3FFF,A4       ; REBIAS

;-----------------------------------------------------------
; DST >= SRC: 64+1 QUO BITS, LAST IS ROUND.
; DST <  SRC: 65+1 QUO BITS, FIRST IS 0, LAST IS ROUND.
; TRICK: IN ORDER TO GET EXTRA (ROUND) BIT IN D4,5, LET
;       LEADING BIT (KNOWN TO BE 1) BE SHIFTED OUT OF
;       D4,5 DURING DIVISION.  THEN PUT IT BACK ON RETURN.
;-----------------------------------------------------------
        MOVEQ   #65,D0          ; QUO BIT COUNT

;-----------------------------------------------------------
; FOR SINGLE OPERATIONS, COMPUTE JUST 32 OR 33 (WITH LEAD 0)
; BITS, THEN SWAP D4,D5.
;-----------------------------------------------------------
        TST.L   D6              ; SINGLE OPERATION? (#OPSGL)
        BPL.S   @3
        MOVEQ   #33,D0
@3:
        CMP.L   A1,D4           ; DVR - DVD
        BNE.S   @5
        CMP.L   A2,D5
@5:
        BLS.S   @7              ; DVR <= DVD

        ADDQ.W  #1,D0           ; GET ONE MORE QUO BIT
        SUBQ.L  #1,A4           ; DECREMENT EXP
@7:

;-----------------------------------------------------------
; SET UP FUNNY REGISTER MASK: RESTORING-DIVISION
; D0    - QUO BIT COUNT
; D1,2  - DIVIDEND CUM REMAINDER
; D3,A2 - DIVISOR  (CAN ADD, NOT ADDX FROM A-REG)
; D4,5  - WILL BE QUOTIENT
;-----------------------------------------------------------
        MOVE.L  A1,D1           ; DVD HI
        MOVE.L  A2,D2           ; DVD LO
        MOVE.L  D4,D3           ; DVR HI
        MOVEA.L D5,A2           ; DVR LO

;-----------------------------------------------------------
; FOR SINGLE ONLY OPERATIONS, MAY WANT TO TEST FOR TRAILING
; ZEROS AND RUN SHORTER LOOP.
;-----------------------------------------------------------
        BSR.S   RESTORE

;-----------------------------------------------------------
; RETURN WITH REMAINDER IN D1,2 AND SHIFTED QUO IN D4,5.
; FIRST ADJUST QUO, THEN TEST REMAINDER FOR STICKY.
; IN CASE OF SINGLE OPERATION, LEFT ALIGN 32-BIT QUO, AND
; THROW AWAY LEAD BIT IN D4.0.
;-----------------------------------------------------------
        TST.L   D6              ; CHEAP #OPSGL
        BPL.S   @9
        
        MOVE.L  D5,D4
        CLR.L   D5
@9:
        MOVE    #$10,CCR        ; SET X BIT
        ROXR.L  #1,D4
        ROXR.L  #1,D5
        ROXR.W  #1,D7
        OR.L    D2,D1           ; OR OF ALL REM BITS
        SNE     D7              ; SET STICKIES

        BRA     COERCE



;-----------------------------------------------------------
; ASSUME FUNNY REGISTER MASK: RESTORING-DIVISION
; D0    - QUO BIT COUNT
; D1,2  - DIVIDEND CUM REMAINDER
; D3,A2 - DIVISOR  (CAN ADD, NOT ADDX FROM A-REG)
; D4,5  - WILL BE QUOTIENT
;-----------------------------------------------------------
RESTORE:
        CLR.L   D4              ; CLEAR QUOTIENT
        MOVE.L  D4,D5
        BRA.S   @2              ; SKIP SHIFT ON 1ST STEP
@1:
        ADD.L   D5,D5           ; SHIFT QUO
        ADDX.L  D4,D4           ; IGNORE CARRY ON LAST STEP
        ADD.L   D2,D2           ; SHIFT REM
        ADDX.L  D1,D1
        BCS.S   @4              ; HAVE TO SUBTRACT
@2:
        CMP.L   D3,D1           ; DVD.HI - DVR.HI
        BNE.S   @3
        CMP.L   A2,D2
@3:
        BCS.S   @5              ; SKIP SUB IF DVD < DVR
@4:
        ADDQ.B  #1,D5           ; SET QUO BIT (NO CARRY)
        SUB.L   A2,D2
        SUBX.L  D3,D1
@5:
        SUBQ.W  #1,D0           ; LOOP COUNT
        BNE.S   @1
        RTS

ÿ