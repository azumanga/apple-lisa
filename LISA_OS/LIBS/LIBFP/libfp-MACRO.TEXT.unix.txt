; Copyright 1983, Apple Computer Inc.


;       File L:Macro, Version 29 January 1983.

;       Macros used by extended precision interface.

                                        ; Macro BREAK is used for debugging.
        .MACRO  BREAK
        .if     debugging
        TRAP    #9
        .endc
        .ENDM
                        ; Macro DEBUGBEGIN is at the beginning of each
                        ; procedure.
                        ; It is not executed.

        .macro  debugbegin
        .if     debugging
        link    a6,#0
        move.l  (sp)+,a6        ; This combination is a noop.
        .endc
        .ENDM

                        ; Macro DEBUGEND is after each procedure.
                        ; It is not executed.
                        ; %1 is the name of the procedure, %2 is 8-length(%1)
        .macro  debugend
        .if     debugging
        unlk    a6
        rts
        .ascii  %1              ; Name of procedure.
        .if    %2
        .block  %2,$20          ; Force fill of blanks.
        .endc
        .endc
        .ENDM
        
        .macro  dofline         ; Sets up F-line op code %1, %2.
        .if     xfline=0
        .ref    x80_flinefake
        jsr     x80_flinefake
        .endc
        .word   %1,%2
        .endm
        
        .macro  getfpcb         ; Puts pointer to FPCB_ in %1.
        
        .ref    x80_fpcb
        clr.l   -(sp)           ; Create slot for result.
        jsr     x80_fpcb
        movea.l (sp)+,%1        ; Store result.
        .endm

        ; Macro LOADX pops address from stack to %1, then loads the
        ; extended at that address into %2 (exponent) and %3 (significand).
        .macro  loadx
        move.l  (sp)+,%1        ; %1 gets address.
        move    (%1)+,%2        ; %2 gets exponent.
        move.l  (%1)+,%3        ; %3 gets significand.
        .ENDM
        

ÿ