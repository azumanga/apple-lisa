
        .INCLUDE  libqd/GrafTypes.text

        .FUNC SlopeFromAngle,1
        .DEF  Slopes
;----------------------------------------------------------------
;
;  FUNCTION SlopeFromAngle(angle: INTEGER): Fixed;
;
;  calculate the fixed point slope of a line, DH/DV = -65536 * Tan(angle).
;  Input angle is treated MOD 180.
;
        FAKEHEAD
        MOVE.L  (SP)+,A0                        ;POP RETURN ADDR
        MOVE    (SP)+,D0                        ;GET INTEGER ANGLE
        EXT.L   D0                              ;SIGN EXTEND FOR DIVIDE
        DIVS    #180,D0                         ;TREAT ANGLE MOD 180
        SWAP    D0                              ;GET THE REMAINDER
        TST     D0                              ;WAS IT NEGATIVE ?
        BPL.S   OK1                             ;NO, CONTINUE
        ADD     #180,D0                         ;YES, PUT IN RANGE 0..179
OK1     LSL     #2,D0                           ;QUAD FOR TABLE INDEX
        CMP     #360,D0                         ;IS ANGLE > 90 DEGREES ?
        BLE.S   OK2                             ;NO, CONTINUE
        SUB     #720,D0
        NEG     D0                              ;YES, ANGLE:=180-ANGLE
        MOVE.L  SLOPES(D0),(SP)                 ;READ FROM TABLE
        JMP     (A0)                            ;AND RETURN

OK2     MOVE.L  SLOPES(D0),(SP)                 ;READ FROM TABLE
        NEG.L   (SP)                            ;NEGATE FOR RESULT
        JMP     (A0)                            ;AND RETURN
        FAKETAIL 'SLOPEFRO'

;
;  look up table: 64K * TAN(x) for x = 0..89
;
SLOPES  .LONG        0                  ;0 degrees, slope = vertical
        .LONG     1144                  ;1 degree, slope = 0.017
        .LONG     2289
        .LONG     3435
        .LONG     4583
        .LONG     5734
        .LONG     6888
        .LONG     8047
        .LONG     9210
        .LONG    10380
        .LONG    11556
        .LONG    12739
        .LONG    13930
        .LONG    15130
        .LONG    16340
        .LONG    17560
        .LONG    18792
        .LONG    20036
        .LONG    21294
        .LONG    22566
        .LONG    23853
        .LONG    25157
        .LONG    26478
        .LONG    27818
        .LONG    29179
        .LONG    30560
        .LONG    31964
        .LONG    33392
        .LONG    34846
        .LONG    36327
        .LONG    37837
        .LONG    39378
        .LONG    40951
        .LONG    42560
        .LONG    44205
        .LONG    45889
        .LONG    47615
        .LONG    49385
        .LONG    51202
        .LONG    53070
        .LONG    54991
        .LONG    56970
        .LONG    59009
        .LONG    61113
        .LONG    63287
        .LONG    65536                          ;45 degrees, slope = 1.0
        .LONG    67865
        .LONG    70279
        .LONG    72785
        .LONG    75391
        .LONG    78103
        .LONG    80930
        .LONG    83882
        .LONG    86969
        .LONG    90203
        .LONG    93595
        .LONG    97161
        .LONG   100917
        .LONG   104879
        .LONG   109070
        .LONG   113512
        .LONG   118230
        .LONG   123255
        .LONG   128622
        .LONG   134369
        .LONG   140542
        .LONG   147196
        .LONG   154393
        .LONG   162207
        .LONG   170727
        .LONG   180059
        .LONG   190330
        .LONG   201699
        .LONG   214358
        .LONG   228551
        .LONG   244584
        .LONG   262850
        .LONG   283867
        .LONG   308322
        .LONG   337153
        .LONG   371673
        .LONG   413777
        .LONG   466312
        .LONG   533747
        .LONG   623533
        .LONG   749079
        .LONG   937205
        .LONG  1250493
        .LONG  1876695
        .LONG  3754544                          ;89 degrees, slope = 57.289
        .LONG  $7FFFFFFF                        ;90 degrees, slope = infinity



        .FUNC AngleFromSlope,1
        .REF  Slopes
;-----------------------------------------------------
;
;  FUNCTION AngleFromSlope(slope: Fixed): INTEGER;
;
;  Scans slope table for angle and returns angle 0..180
;
        FAKEHEAD
        MOVE.L  4(SP),D0                        ;GET SLOPE
        SMI     D2                              ;REMEMBER IF IT WAS NEGATIVE
        BPL.S   NOTNEG                          ;CONTINUE IF POSITIVE
        NEG.L   D0                              ;ELSE MAKE SLOPE POS
NOTNEG  LEA     SLOPES,A0                       ;POINT TO TABLE OF SLOPES
        MOVE    #180,D1                         ;INIT ANGLE COUNT
        SUB.L   #500,D0                         ;BIAS THE COMPARE
SCAN    CMP.L   (A0)+,D0                        ;SCAN THRU SLOPE TABLE
        DBLE    D1,SCAN                         ;UNTIL WE FIND IT
        MOVE    #180,D0
        SUB     D1,D0                           ;CALC 180-ANGLE = 90..180
        TST.B   D2                              ;WAS DH POS ?
        BMI.S   DONE                            ;NO, RETURN 90..180
        MOVE    D1,D0                           ;YES, RETURN 0..90
DONE    MOVE.L  (SP)+,(SP)                      ;STRIP PARAM
        MOVE.W  D0,4(SP)                        ;RETURN FUNCTION RESULT
        RTS
        FAKETAIL 'ANGFROMS'



        .PROC   PtToAngle,3
        .REF    AngleFromSlope,FixMul,FixRatio
;--------------------------------------------------------------
;
;  PROCEDURE PtToAngle(r: Rect; pt: Point; VAR angle: INTEGER);
;
;  Given a rectangle and a point, return the angle subtended by pt.
;
;  A6 OFFSETS OF PARAMETERS AFTER LINK:
;
PARAMSIZE       .EQU    12                      ;TOTAL BYTES OF PARAMS
RECT            .EQU    PARAMSIZE+8-4           ;ADDR OF RECT
PT              .EQU    RECT-4                  ;POINT
ANGLE           .EQU    PT-4                    ;ADDR OF INTEGER;

        LINK    A6,#0                           ;NO LOCALS
        MOVEM.L D6-D7/A4,-(SP)                  ;SAVE REGS
        MOVE.L  RECT(A6),A4                     ;POINT TO RECT

        MOVE    BOTTOM(A4),D0
        ADD     TOP(A4),D0
        ASR     #1,D0                           ;CENTER.V := (TOP+BOTTOM)/2
        MOVE    PT+V(A6),D1
        SUB     D0,D1                           ;DV := PT.V - CENTER.V

        MOVE    RIGHT(A4),D0
        ADD     LEFT(A4),D0
        ASR     #1,D0                           ;CENTER.H := (LEFT+RIGHT)/2
        MOVE    PT+H(A6),D7
        SUB     D0,D7                           ;DH := PT.H - CENTER.H
        BNE.S   DHOK                            ;CONTINUE IF DH <> 0
        TST     D1                              ;WAS DV > 0 ?
        BLE.S   ZERO                            ;NO, RETURN ANGLE = 0
        MOVE    #180,D0                         ;YES, RETURN ANGLE = 180
        BRA.S   DONE

DHOK    CLR.L   -(SP)                           ;ROOM FOR FCN RESULT
        MOVE    D7,-(SP)                        ;PUSH DH
        MOVE    D1,-(SP)                        ;PUSH DV
        JSR     FIXRATIO                        ;CALC SLOPE := DH/DV
        MOVE.L  (SP)+,D6                        ;GET SLOPE RESULT

        CLR.L   -(SP)                           ;ROOM FOR FCN RESULT
        MOVE    BOTTOM(A4),D0
        SUB     TOP(A4),D0
        MOVE    D0,-(SP)                        ;PUSH HEIGHT
        MOVE    RIGHT(A4),D0
        SUB     LEFT(A4),D0
        MOVE    D0,-(SP)                        ;PUSH WIDTH
        JSR     FIXRATIO                        ;CALC ASPECT := HEIGHT/WIDTH
        MOVE.L  (SP)+,D0                        ;GET ASPECT RESULT

        CLR.L   -(SP)                           ;ROOM FOR FCN RESULT
        MOVE.L  D6,-(SP)                        ;PUSH SLOPE
        MOVE.L  D0,-(SP)                        ;PUSH ASPECT
        JSR     FixMul                          ;CALC SLOPE*ASPECT
        MOVE.L  (SP)+,D0                        ;GET RESULT SLOPE2

        CLR.W   -(SP)                           ;ROOM FOR FCN RESULT
        MOVE.L  D0,-(SP)                        ;PUSH SLOPE2
        JSR     AngleFromSlope                  ;SCAN FOR ARCTAN
        MOVE    (SP)+,D0                        ;GET RESULT ANGLE

        TST     D7                              ;WAS DH POSITIVE ?
        BPL.S   DONE                            ;YES, CONTINUE
        ADD     #180,D0                         ;NO, ADD 180 TO ANG
        CMP     #360,D0                         ;IS RESULT = 360 ?
        BNE.S   DONE                            ;NO, CONTINUE
ZERO    CLR     D0                              ;YES, ANGLE := 0
DONE    MOVE.L  ANGLE(A6),A0                    ;GET VAR ADDR
        MOVE    D0,(A0)                         ;STORE INTO ANGLE
        MOVEM.L (SP)+,D6-D7/A4                  ;RESTORE REGS
        UNLINK  PARAMSIZE,'PTTOANGL'



        .END



ÿ