;----------------------------------------------------------------
; CopyRight 1983, Apple Computer, Inc.
; Written by Bill Atkinson
;----------------------------------------------------------------

;-----------------------------------------------------------
;
;  --> LINE2.TEXT
;
;  Continuation of DrawLine.
;


;-----------------------------------------------------------------------------
;
;  ROUTINE TO UPDATE THE MASK BUFFER BASED ON WHICH REGIONS ARE RECTANGULAR
;
SEEKMASK MOVE   RECTFLAG(A6),D0
         MOVE   RECTJMP(D0),D0
         JMP    RECTJMP(D0)
RECTJMP .WORD   IGNORE-RECTJMP                    ;DO NOTHING IF BOTH RECT
        .WORD   A-RECTJMP
        .WORD   B-RECTJMP
        .WORD   AB-RECTJMP
IGNORE  RTS


;--------------------------------------------------------------------
;
;  ONLY REGION A IS NON RECTANGULAR.  UPDATE IT AND USE IT AS THE MASK
;
A       MOVE    VERT(A6),D0
        LEA     STATEA(A6),A1
        JSR     SEEKRGN
        MOVE.L  SCANBUF(A1),MASKBUF(A6)
        RTS


;--------------------------------------------------------------------
;
;  ONLY REGION B IS NON RECTANGULAR.  UPDATE IT AND USE IT AS THE MASK
;
B       MOVE    VERT(A6),D0
        LEA     STATEB(A6),A1
        JSR     SEEKRGN
        MOVE.L  SCANBUF(A1),MASKBUF(A6)
        RTS


;-------------------------------------------------------------------
;
;  REGIONS A AND B ARE NON-RECTANGULAR. UPDATE EACH,
;  THEN FORM INTERSECTION IN THE MASK BUFFER.
;
AB      MOVE    VERT(A6),D0
        LEA     STATEA(A6),A1
        JSR     SEEKRGN
        LEA     STATEB(A6),A1
        JSR     SEEKRGN
        MOVE.L  STATEA+SCANBUF(A6),A0
        MOVE.L  STATEB+SCANBUF(A6),A1
        MOVE.L  MASKBUF(A6),A2
        MOVE    BUFSIZE(A6),D1
ABLOOP  MOVE.L  (A0)+,D0
        AND.L   (A1)+,D0
        MOVE.L  D0,(A2)+
        DBRA    D1,ABLOOP
        RTS



;--------------------------------------------------------------
;
;  LOCAL PROCEDURE DRAWSLAB
;
;  INPUTS:
;
;    D1: LEFT
;    D2: RIGHT
;    MINRECT(A6)
;    DSTLEFT(A6)
;    MASKBUF(A6)
;    MODECASE(A6)
;

;-----------------------------------------
;
;  CLIP LEFT AND RIGHT TO MINRECT
;
DRAWSLAB CMP    D2,D1                           ;IS LEFT >= RIGHT ?
        BGE.S   DONESLAB                        ;YES, QUIT
        CMP     MINRECT+RIGHT(A6),D1            ;IS LEFT >= MAXH ?
        BGE.S   DONESLAB                        ;YES, IGNORE
        CMP     MINRECT+LEFT(A6),D1             ;IS LEFT < MINH ?
        BGE.S   LOK1                            ;NO, CONTINUE
        MOVE    MINRECT+LEFT(A6),D1             ;YES, CLIP AT LEFT

LOK1    CMP     MINRECT+LEFT(A6),D2             ;IS RIGHT <= MINH ?
        BLE.S   DONESLAB                        ;YES, IGNORE
        CMP     MINRECT+RIGHT(A6),D2            ;IS RIGHT > MAXH
        BLE.S   ROK1                            ;NO, CONTINUE
        MOVE    MINRECT+RIGHT(A6),D2            ;YES, CLIP AT RIGHT
ROK1


;----------------------------------------------------
;
;  SET UP RIGHTMASK, LEFTMASK, DSTPTR AND MASKPTR
;
        MOVE    D2,D0                           ;GET RIGHT
        JSR     RIGHTMASK                       ;GET RIGHTMASK
        MOVE    D0,D3                           ;PUT RIGHTMASK IN D3
        MOVE    D1,D0                           ;COPY LEFT
        JSR     LEFTMASK                        ;GET LEFTMASK
        EXG     D0,D1                           ;PUT LEFTMASK IN D1
        MOVE.L  DSTLEFT(A6),A1                  ;INIT DSTPTR TO LEFT
        MOVE.L  MASKBUF(A6),A2                  ;INIT MASKPTR TO LEFT
        ASR     #3,D0                           ;CONVERT DOTS TO BYTES
        AND     #$FFFE,D0                       ;TRUNC TO WORD BOUNDARY
        ADD     D0,A1                           ;OFFSET DSTPTR
        ADD     D0,A2                           ;OFFSET MASKPTR


;--------------------------------------------------------
;
;  CALC WORDCOUNT AND TAKE MODE CASE JUMP
;
        ASR     #3,D2                           ;CONVERT DOTS TO BYTES
        AND     #$FFFE,D2                       ;TRUNC TO WORD BOUNDARY
        SUB     D0,D2                           ;CALC BYTECOUNT
        ASR     #1,D2                           ;HALVE FOR WORDCOUNT

        MOVE.L  MODECASE(A6),A0                 ;GET MODE CASE JUMP
        JMP     (A0)                            ;DRAW ONE SLAB
DONESLAB RTS



;---------------------------------------------------------
;
;  INTERFACE TO EACH SCAN LINE ROUTINE:
;
;  ENTER WITH Z-FLAG SET IF ALL IN ONE WORD
;
;  INPUTS:      A1: DSTPTR
;               A2: MASKPTR
;               D1: LEFTMASK
;               D2: WORDCNT
;               D3: RIGHTMASK
;               D6: PATTERN
;               D7: PAT-SEL
;
;  CLOBBERS:    D0,D1,D2,A1,A2
;
MODETAB .WORD    MASK8-MODETAB
        .WORD    MASK9-MODETAB
        .WORD    MASK10-MODETAB
        .WORD    MASK11-MODETAB


;-------------------------------------------------------
;
;  MODE 8 OR 12: PATTERN --> DST
;
END8    AND     D3,D1           ;COMBINE RIGHT AND LEFT MASK
NEXT8   MOVE    D6,D0           ;GET PATTERN DATA
        AND     (A2)+,D1        ;MERGE MASK AND CLIPRGN MASK
        AND     D1,D0           ;MASK PATTERN DATA
        NOT     D1              ;MAKE NOTMASK
        AND     D1,(A1)         ;CLR HOLE IN DST
        OR      D0,(A1)+        ;FILL HOLE WITH PATTERN
        MOVEQ   #-1,D1          ;FLUSH MASK
        SUB     #1,D2           ;DEC WORD COUNT
MASK8   BGT     NEXT8           ;LOOP FOR ALL WORDS IN ROW
        BEQ     END8            ;DO LAST WORD WITH MASK
        RTS


;-------------------------------------------------------
;
;  MODE 9 OR 13: PATTERN OR DST --> DST
;
END9    AND     D3,D1           ;COMBINE RIGHT AND LEFT MASK
NEXT9   AND     D6,D1           ;GET PATTERN DATA
        AND     (A2)+,D1        ;MERGE MASK AND CLIPRGN MASK
        OR      D1,(A1)+        ;OR RESULT INTO DST
        MOVEQ   #-1,D1          ;FLUSH MASK
        SUB     #1,D2           ;DEC WORD COUNT
MASK9   BGT     NEXT9           ;LOOP FOR ALL WORDS IN ROW
        BEQ     END9            ;DO LAST WORD WITH MASK
        RTS


;-------------------------------------------------------
;
;  MODE 10 OR 14: PATTERN XOR DST --> DST
;
END10   AND     D3,D1           ;COMBINE RIGHT AND LEFT MASK
NEXT10  AND     D6,D1           ;GET PATTERN DATA
        AND     (A2)+,D1        ;MERGE MASK AND CLIPRGN MASK
        EOR     D1,(A1)+        ;XOR RESULT INTO DST
        MOVEQ   #-1,D1          ;FLUSH MASK
        SUB     #1,D2           ;DEC WORD COUNT
MASK10  BGT     NEXT10          ;LOOP FOR ALL WORDS IN ROW
        BEQ     END10           ;DO LAST WORD WITH MASK
        RTS


;-------------------------------------------------------
;
;  MODE 11 OR 15: PATTERN BIC DST --> DST
;
END11   AND     D3,D1           ;COMBINE RIGHT AND LEFT MASK
NEXT11  AND     D6,D1           ;GET PATTERN DATA
        AND     (A2)+,D1        ;MERGE MASK AND CLIPRGN MASK
        NOT     D1              ;INVERT FOR BIC
        AND     D1,(A1)+        ;BIC RESULT INTO DST
        MOVEQ   #-1,D1          ;FLUSH MASK
        SUB     #1,D2           ;DEC WORD COUNT
MASK11  BGT     NEXT11          ;LOOP FOR ALL WORDS IN ROW
        BEQ     END11           ;DO LAST WORD WITH MASK
        RTS




ÿ