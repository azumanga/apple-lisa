
        .INCLUDE libqd/GRAFTYPES.TEXT
;-------------------------------------------------------------
;
;  -->  FIXMATH.TEXT
;
;  Fixed point math routines used by LisaGraf.
;


        .PROC   LONGMUL,3
;------------------------------------------------------------
;
;  PROCEDURE LongMul(a,b: LongInt; VAR dst: Int64);
;
;  multiply 2 long integers and return full 64 bit result
;
;  CLOBBERS ONLY A0
;
;  A6 OFFSETS OF PARAMETERS AFTER LINK:
;
PARAMSIZE       .EQU    12
A               .EQU    PARAMSIZE+8-4           ;LONGINT
B               .EQU    A-4                     ;LONGINT
DST             .EQU    B-4                     ;LONG, VAR


        LINK    A6,#0                           ;NO LOCAL VARS
        MOVEM.L D0-D1/A1-A2,-(SP)               ;SAVE REGS
        MOVE.L  DST(A6),A0                      ;POINT TO VAR DST

        LEA     A(A6),A1                        ;POINT TO A PARAM
        LEA     B(A6),A2                        ;POINT TO B PARAM

;  CHECK SIGNS, TAKE ABSOLUTE VALUES, AND SET UP NEGFLAG

        TST.L   (A2)+                           ;CHECK SIGN OF B
        SMI     D1                              ;SET NEGFLAG
        BPL.S   BPOS                            ;CONTINUE IF POSITIVE
        NEG.L   -4(A2)                          ;TAKE ABS VALUE OF B

BPOS    TST.L   (A1)+                           ;IS A NEG ?
        BPL.S   APOS                            ;NO, CONTINUE
        NOT.B   D1                              ;YES, INVERT NEGFLAG
        NEG.L   (A2)                            ;TAKE ABS VALUE OF A
APOS

;  COMPUTE LEAST SIGNIFICANT PARTIAL PRODUCT

        MOVE.W  -(A1),D0                        ;GET LO WORD OF A
        MULU    -(A2),D0                        ;MULT TIMES LO WORD OF B
        MOVE.L  D0,4(A0)                        ;STORE INTO LO LONG OF DST

;  COMPUTE MOST SIGNIFICANT PARTIAL PRODUCT

        MOVE    -(A1),D0                        ;GET HI WORD A
        MULU    -(A2),D0                        ;MULT BY HI WORD B
        MOVE.L  D0,(A0)                         ;STORE INTO HI LONG OF DST


;  COMPUTE AND ADD FIRST MIDDLE PARTIAL PRODUCT

        MOVE.W  (A1)+,D0                        ;GET HI WORD A
        MULU    2(A2),D0                        ;MULT BY LO WORD B
        ADD.L   D0,2(A0)                        ;ADD TO MID LONG OF DST
        BCC.S   OK1                             ;CONTINUE IF NO CARRY
        ADD     #1,(A0)                         ;ELSE INC HI WORD DST
OK1

;  COMPUTE AND ADD SECOND MIDDLE PARTIAL PRODUCT

        MOVE.W  (A2),D0                         ;GET HI WORD B
        MULU    (A1),D0                         ;MULT BY LO WORD A
        ADD.L   D0,2(A0)                        ;ADD TO MID LONG OF DST
        BCC.S   OK2                             ;CONTINUE IF NO CARRY
        ADD     #1,(A0)                         ;ELSE INC HI WORD OF DST
OK2

;  IF NEGFLAG, THEN NEGATE 64 BIT RESULT

        TST.B   D1                              ;CHECK NEGFLAG
        BEQ.S   NOTNEG                          ;CONTINUE IF POSITIVE
        NEG.L   4(A0)                           ;ELSE NEGATE 64 BIT DST
        NEGX.L  (A0)

NOTNEG  MOVEM.L (SP)+,D0-D1/A1-A2               ;RESTORE REGS
        UNLINK  PARAMSIZE,'LONGMUL '



        .FUNC FIXMUL,2
        .REF  LONGMUL
;------------------------------------------------------
;
;  FUNCTION FixMul(a,b: Fixed): Fixed;
;
;  MULTIPLY 2 FIXED POINT NUMBERS
;
;  CLOBBERS ONLY A0
;
;  A6 OFFSETS OF PARAMETERS AFTER LINK:
;
PARAMSIZE       .EQU    8
RESULT          .EQU    PARAMSIZE+8
A               .EQU    RESULT-4
B               .EQU    A-4

DST             .EQU    -8                      ;64 BIT INTEGER
VARSIZE         .EQU    DST                     ;TOTAL SIZE OF LOCAL VARS

        LINK    A6,#VARSIZE                     ;ALLOCATE LOCAL VARIABLES
        MOVE.L  A(A6),-(SP)                     ;PUSH A
        MOVE.L  B(A6),-(SP)                     ;PUSH B
        PEA     DST(A6)                         ;PUSH ADDR OF DST
        JSR     LONGMUL                         ;CALC 64 BIT PRODUCT
        MOVE.L  DST+2(A6),RESULT(A6)            ;RETURN ONLY MIDDLE LONG
        UNLINK  PARAMSIZE,'FIXMUL  '



        .FUNC FIXRATIO,2
;--------------------------------------------------------
;
;  FUNCTION FixRatio(numerator,denuminator: INTEGER): Fixed;
;
;  RETURN A FIXED POINT NUMBER WHICH IS THE RATIO OF TWO INTEGERS
;  IF DENOMINATOR IS ZERO, return biggest pos or neg number
;
;  CLOBBERS D0,D1
;
;  OFFSETS OF PARAMETERS WITHOUT LINK:
;
PARAMSIZE       .EQU    4
RESULT          .EQU    PARAMSIZE+4
NUM             .EQU    RESULT-2
DEN             .EQU    NUM-2

        FAKEHEAD
        MOVE    NUM(SP),D0                      ;GET NUMERATOR
        EXT.L   D0                              ;EXTEND TO LONG FOR DIV
        SMI     D1                              ;REMEMBER IF NEGATIVE
        BPL.S   NUMPOS                          ;CONTINUE IF POSITIVE
        NEG.L   D0                              ;TAKE ABS VALUE OF NUM
NUMPOS  TST     DEN(SP)                         ;IS DENOMINATOR ZERO ?
        BNE.S   NOTZERO                         ;NO, CONTINUE
        MOVE.L  #$7FFFFFFF,RESULT(SP)           ;YES, ANSWER := BIG NUMBER
        BRA.S   DONE                            ;CHECK SIGN AND QUIT
NOTZERO BPL.S   DENPOS                          ;CONTINUE IF DENOMINATOR POS
        NOT     D1                              ;NO, INVERT NEGFLAG
        NEG     DEN(SP)                         ;TAKE ABS VALUE OF DENOM
DENPOS  DIVS    DEN(SP),D0                      ;DIVIDE BY DENOMINATOR
        MOVE    D0,RESULT(SP)                   ;STORE RESULT.INT
        CLR     D0                              ;KILL QUOTIENT
        DIVU    DEN(SP),D0                      ;CALC REM DIV DENUM
        MOVE    D0,RESULT+2(SP)                 ;STORE RESULT.FRACT
;
;        ADD.L   #1,RESULT(SP)                   ;COMPENSATE FOR TRUNCATION
;
DONE    TST.B   D1                              ;IS RESULT NEG ?
        BEQ.S   POS                             ;NO CONTINUE
        NEG.L   RESULT(SP)                      ;YES, MAKE IT NEG
POS     MOVE.L  (SP)+,(SP)                      ;STRIP PARAMS
        RTS
        FAKETAIL 'FIXRATIO'



        .FUNC   HIWORD,1
;----------------------------------------------------
;
;  FUNCTION HiWord(x: Fixed): INTEGER;
;
        FAKEHEAD
        MOVE.W  4(SP),8(SP)                     ;GET HI WORD
        MOVE.L  (SP)+,(SP)                      ;STRIP PARAM
        RTS                                     ;RETURN
        FAKETAIL 'HIWORD  '



        .FUNC   LOWORD,1
;----------------------------------------------------
;
;  FUNCTION LoWord(x: Fixed): INTEGER;
;
        FAKEHEAD
        MOVE.W  6(SP),8(SP)                     ;GET HI WORD
        MOVE.L  (SP)+,(SP)                      ;STRIP PARAM
        RTS                                     ;RETURN
        FAKETAIL 'LOWORD  '



        .FUNC   FIXROUND,1
;----------------------------------------------------
;
;  FUNCTION FixRound(x: Fixed): INTEGER;
;
        FAKEHEAD
        MOVE.L  (SP)+,A0                        ;POP RETURN ADDR
        MOVE.L  (SP)+,D0                        ;POP FIXED POINT NUMBER
        SMI     D1                              ;REMEMBER SIGN
        BPL.S   POS                             ;OK IF POSITIVE
        NEG.L   D0                              ;ELSE TAKE ABS VALUE
POS     ADD.L   #$00008000,D0                   ;ADD ONE HALF
        SWAP    D0                              ;GET HI WORD
        TST.B   D1                              ;WAS INPUT NEG ?
        BEQ.S   POS2                            ;NO, CONTINUE
        NEG.W   D0                              ;YES, NEGATE RESULT
POS2    MOVE    D0,(SP)                         ;STORE FCN RESULT
        JMP     (A0)                            ;AND RETURN
        FAKETAIL 'FIXROUND'



        .END




ÿ