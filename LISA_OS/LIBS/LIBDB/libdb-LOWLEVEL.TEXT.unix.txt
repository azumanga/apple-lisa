{ Copyright 1983,Apple Computer Inc. }
{$G+}
{$R-}
{$U-}
{$S openclose }
{$SETC OSBuilt := TRUE }
unit lowlevel ;
       intrinsic;
Interface


Uses
{$IFC OSBuilt }
        {$U libsm/unitstd.obj} unitstd,
        {$U libdb/dbenv.obj } dbenv,
        {$U libdb/dbdecl1.obj } dbdecl1,
        {$U libos/syscall.obj } syscall,
        {$U libos/psyscall.obj } psyscall;
{$ELSEC }
        {$U obj:dbenv.obj } dbenv,
        {$U obj:dbdecl1.obj } dbdecl1,
        {$U obj:syscall.obj } syscall;
{$ENDC }
Type
        ptrpathname = ^ pathname;

Var

        {   pathname prefix, prepended to all files }

        prefix_length : integer;
        prefix : pathname;
{af}    passwd_length : integer;
        password : e_name;


{****************************************************************************

                                setprefix

        sets current pathname prefix.

*****************************************************************************}

procedure setprefix(newprefix : ptrpathname);
procedure setpasswd(var newpasswd : e_name);       {af}

{****************************************************************************

                                prefix_name

        appends pathname to prefix.

*****************************************************************************}

procedure prefix_name(fname : ptrpathname);

Implementation
{$IFC DOLLARD }
{$D- }
{$ENDC}

{$S openclose }
procedure setprefix{(newprefix : ptrpathname)};
begin
{$IFC fTraceDB}    LogCall;     {$ENDC}
        prefix_length := length(newprefix^);
        movelf(@newprefix^,@prefix,prefix_length+1);
end;

{$S openclose }         {af}
procedure setpasswd{(var newpasswd : e_name)};
begin
{$IFC fTraceDB}    LogCall;     {$ENDC}
        passwd_length := length(newpasswd);
        password := newpasswd;
end;

{$S openclose }
procedure prefix_name{(fname : ptrpathname)};
var
        i : integer;
        ps,pd : ^ byte;
begin
{$IFC fTraceDB}    LogCall;     {$ENDC}
        prefix[0] := chr(prefix_length+length(fname^));
        movelg(pointer(ord(fname) + 1),
               pointer(ord(@prefix) + prefix_length + 1),
               length(fname^));
end;

end.

ÿ