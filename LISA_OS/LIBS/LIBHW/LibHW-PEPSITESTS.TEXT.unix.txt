{
{
{   File PepsiTests.TEXT
{
{-----------------------------------------------------------------------------
{
{   Test and Demonstration -- Lisa Hardware Interface Routines
{
{     test speaker and timers for pepsi revs.
{
}

program stuntz;

uses {$U LibHW/hwint.obj} hwint;

const
   returnKey = 72;

var
   event: KeyEvent;
   x,y: Pixels;
   cursor: array [1..32] of integer;
   mask: array [1..32] of integer;
   time: Milliseconds;
   microticks: Microseconds;
   frame: Frames;

procedure FirstTests;
   var
      i: integer;

   begin
   writeln;

   writeln('Millisecond Timer');
   writeln('  Compare the millisecond timer with the frame counter');
   time := Timer;
   frame := FrameCounter;
      while Timer < time + 4000 do
        begin
        end;
   time := Timer - time;
   frame := FrameCounter - frame;
   writeln('    The Millisecond timer advanced ',time:1, ' milliseconds.');
   writeln('    The FrameCounter advanced ',frame:1, ' frames.');


   writeln;
   writeln('  Make sure the millisecond timer is always increasing ');
   writeln('  PRESS RETURN TO CONTINUE');
   while not KeyIsDown(returnkey) do
       begin
       time:=Timer;
       while Timer = time do begin end;
       if Timer < time then writeln ('millisecond timer is going down!');
       end;

   writeln;
   writeln('MicrosecondTimer');
   writeln('  Compare the microsecond timer with the frame counter');
   microticks := MicroTimer;
   frame := FrameCounter;
      while MicroTimer < microticks + 1000000 do
        begin
        end;
   microticks := MicroTimer - microticks;
   frame := FrameCounter - frame;
   writeln('    The Microsecond timer advaced ',microticks:1, ' microseconds.');
   writeln('    The FrameCounter advanced ',frame:1, ' frames.');

   writeln;
   writeln('  Make sure the microsecond timer is always increasing ');
   writeln('  PRESS RETURN TO CONTINUE');
   while not KeyIsDown(returnkey) do
       begin
       microticks := MicroTimer;
       if MicroTimer < microticks then
       writeln('MicroSecond timer is going down!')
       end;


   writeln('Cursor and Mouse');
   for i := 1 to 32 do
      begin
      cursor[i] := $EDB7;
      mask[i] := $0000;
      end;
   CursorInit;
   CursorImage(8,16,32,@cursor[1],@mask[1]);
   CursorTracking(false);
   CursorLocation(360,180);
   CursorTracking(true);
   writeln('  A big transparent cursor has been placed at 360, 180.');
   MouseLocation(x,y);
   writeln('  Its now at ',x:1,', ',y:1,'.');
   MouseScaling(true);
   MouseThreshold(8);
   MouseUpdates(28);
   writeln('  The mouse delay has been set to 28 milliseconds.');
   write('  Hit <Return> to reset the delay to 16 milliseconds.');
   readln;
   MouseUpdates(16);
   CursorObscure;
   writeln('  The cursor has been obscured.');
   writeln('  Moving the mouse should cause it to reappear.');
   write  ('  Hit <Return> to go on to the next test.');
   readln;
   writeln;

   writeln('Busy Cursor');
   for i := 1 to 32 do
      begin
      cursor[i] := $FFFF;
      mask[i] := $0000;
      end;
   BusyImage(8,16,32,@cursor[1],@mask[1]);
   writeln('   The busy cursor is all black, but inverting.');
   writeln('   It will appear if you stop typing for 5 seconds.');
   write('   Hit <Return> to go on to the next stunt.  ');
   repeat
      BusyDelay(5000);
   until keybdEvent(true,true,event) and (event.key = returnKey);
   CursorReInit;
   writeln;
   writeln;

   writeln('Screen Dimensions');
   ScreenSize(x,y);
   writeln('   The screen dimensions are ',x:1,' by ',y:1,'.');
   writeln;

   writeln('Contrast Control');
   SetContrast(176);
   writeln('   The contrast has been set to $B0 (',
      Contrast:1,').');
   write  ('   Hit <Return> to ramp the contrast back to $80.');
   readln;
   RampContrast(128);
   SetDimContrast(176);
   writeln('   The dim contrast setting has been set to $B0 (',
      DimContrast:1,').');
   writeln;

   writeln('Speaker Test');
   writeln('   Position the mouse and push the mouse button.');
   writeln('   The horizontal coordinate determines pitch.');
   writeln('   The vertical coordinate determines volume.');
   writeln('   Hit <Return> to end this silly game.');
   while not KeyIsDown(returnkey) do
      begin
      MouseLocation(x,y);
      SetVolume(y div 46);
      Noise((820-x)*8);
      end;
   readln;
   Silence;
   writeln('   The final volume was ',Volume:1,'.');
   writeln;
   end;


begin
FirstTests;
writeln('Bye.');
end.



ÿ