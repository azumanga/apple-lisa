(*
$Exec
PLibPr/PrFileProcs
{no listing}
LibPr/Temp
GLibPr/Temp
LibPr/PrFileProcs
$EndExec
*)
{               NOTE: The above compiles this program.                   }
{------------------------------------------------------------------------------------------}
{                      Copyright 1983, 1984, Apple Computer Inc.                           }
{------------------------------------------------------------------------------------------}
UNIT PrFileProcs;
INTRINSIC;
{ ---------------------------------------------------------------------- }
                            Interface
{ ---------------------------------------------------------------------- }
USES
     {$U LibOS/SysCall   }  SysCall,
     {$U LibPM/PMDecl    }  PMDecl,
     {$U LibSM/UnitStd   }  UnitStd,
     {$U LibSM/UnitHz    }  UnitHz,
     {$U LibQD/Storage   }  Storage,
     {$U LibQD/QuickDraw }  QuickDraw,
     {$U LibFM/FontMgr   }  FontMgr,

     {$U LibPr/PrStdInfo }  PrStdInfo,
     {$U LibPr/PrStdProcs}  PrStdProcs;
{ ---------------------------------------------------------------------- }
CONST
    pfPassword = -13264;
    pfPicHRule = 20;
    pfPicVRule = 21;
    pfPicTab   = 22;
    HeapSize = 12000;
{ ---------------------------------------------------------------------- }
TYPE
    TStr80 = String[80];
{ ---------------------------------------------------------------------- }
{Generic IO}
PROCEDURE OpenBlock  ( VAR error:Integer; Var FileRec: TPrFileRec{.PrStdInfo}; access: MSet);
PROCEDURE WriteBlock ( VAR error:Integer; p: TP; lCount: LongInt; RefNum: Integer);
PROCEDURE ReadBlock  ( VAR error:Integer; p: TP; lCount: LongInt; RefNum: Integer);
PROCEDURE PfSetPos   ( VAR error:Integer;     lPos: TL; RefNum:Integer);
PROCEDURE PfSavePos  ( VAR error:Integer; VAR lPos: TL; RefNum:Integer);
{ ---------------------------------------------------------------------- }
                            Implementation
{ ---------------------------------------------------------------------- }

{$IFC PrSymbols}
{$D+}
{$ELSEC}
{$D-}
{$ENDC}
{$IFC PrDebug}
{$R+}
{$ELSEC}
{$R-}
{$ENDC}
{$S Pr }

{ ---------------------------------------------------------------------- }
PROCEDURE OpenBlock (* ( VAR error:Integer; Var FileRec: TPrFileRec{.PrStdInfo}; access: MSet)*);
BEGIN
  {$IFC fTracePR}    LogCall;     {$ENDC}
  OPEN( error, FileRec.FileName, FileRec.RefNum, access );
  IF error = 948 THEN
  BEGIN
    MAKE_FILE( error, FileRec.FileName, 0);

    OPEN( error, FileRec.FileName, FileRec.RefNum, access );
  END;
END;
{ ---------------------------------------------------------------------- }
PROCEDURE PfSetPos{ VAR Error: Integer; lPos: TL ;RefNum: Integer};
VAR lActual: TL;
    iJunk: TC;
BEGIN
   {$IFC fTracePR}    LogCall;     {$ENDC}
   Read_Data( Error, RefNum, ORD(@lActual), 0, lActual, absolute, lPos);
END;
{ ---------------------------------------------------------------------- }
PROCEDURE PfSavePos{ VAR error: Integer; VAR lPos: TL; RefNum: Integer };
VAR finfo: fs_info;
BEGIN
  {$IFC fTracePR}    LogCall;     {$ENDC}
  Error:=0;
  Info( error, RefNum, finfo );
  lPos:=finfo.fmark;
END;
{ ---------------------------------------------------------------------- }
PROCEDURE WriteBlock{ VAR error:Integer; p: TP; lCount: LongInt ; RefNum: Integer};
VAR
    lActual: TL;
    i: TC;
    iJunk: TC;
BEGIN
   {$IFC fTracePR}    LogCall;     {$ENDC}
   Write_Data( error, RefNum, ORD(p), lCount, lActual, sequential, 0 );
END;
{ ---------------------------------------------------------------------- }
PROCEDURE ReadBlock{ VAR Error: Integer; p: TP; lCount: LongInt; RefNum:Integer };
VAR lActual: TL;
    iJunk  : TC;
BEGIN
    {$IFC fTracePR}    LogCall;     {$ENDC}
    Read_Data( Error, RefNum, ORD(p), lCount, lActual, sequential, 0);
END;
{ ---------------------------------------------------------------------- }
END.
{
UNIT PrFile CHANGE LOG:
      9/28/83 EZ deleted declaration of ReadBlock - it was not used.
      4/13/83 EZ & OD: pfCleanUp: fixed latency problem of PrIS and pfPic.
      4/08/83 BH & OD: pfPic: check for nil value at cleanup.
      2/19/83 OD: PfDumpBand: check for picSize<0 [>32K].
      1/29/83 OD: Add Sched_Fence calls.
}


ÿ