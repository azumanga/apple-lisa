{
}
{------------------------------------------------------------------------------------------}
{                          Copyright 1983, 1984, Apple Computer Inc.                       }
{------------------------------------------------------------------------------------------}
(* PrPublic                                                                               *)
{------------------------------------------------------------------------------------------}
UNIT PrPublic;
INTRINSIC;

{------------------------------------------------------------------------------------------}
                                          INTERFACE
{------------------------------------------------------------------------------------------}

USES
     {$U LibOS/SysCall   }  SysCall,
     {$U LibPM/PMDecl    }  PMDecl,
     {$U LibSM/UnitStd   }  UnitStd,
     {$U LibSM/UnitHz    }  UnitHz,
     {$U LibQD/Storage   }  Storage,
     {$U LibQD/QuickDraw }  QuickDraw,
     {$U LibFM/FontMgr   }  FontMgr,
     {$U LibPr/PrStdInfo }  PrStdInfo;


{------------------------------------------------------------------------------------------}
{                                    CONST Declarations                                    }
{------------------------------------------------------------------------------------------}
{------------------------------------------------------------------------------------------}
{                                    TYPE Declarations                                     }
{------------------------------------------------------------------------------------------}
{------------------------------------------------------------------------------------------}
{                                   PROCEDURE DIRECTORY                                    }
{------------------------------------------------------------------------------------------}

PROCEDURE PsYieldCpu;                                                               {.PrStdProcs}
PROCEDURE PrGlobalInit;                                                             {.PrMgr}
{  Returns true if the print record is valid; false otherwise.}
FUNCTION  FPrPrfValid ( VAR prprf: TPrRec ):TF;                                     {.PrMgr}
{  Converts a virgin prprf print record to a valid default printer.}
PROCEDURE PrPrfDefault( VAR prprf: TPrRec );                                        {.PrMgr}
{  Compares two print records and returns true if they are equivalent. }
FUNCTION  fPrPrfEq    ( VAR prprf1,prprf2:TPrRec):TF;                               {.PrMgr}

{Control functions in nested calling order}
(* ----- PrDocStart  = True, If enough disk space for printing. *)
Function  PrDocStart ( Var PrRec : TPrRec; Var PrPort : TPrPort; LDSN : INTEGER;
                       DoSpoolAlert:Boolean):Boolean;                              {.PrSpool}
  {IF False THEN Abort Printing ELSE IF True THEN OK to print}

(* ----- PrPageStart = True, If current page is within user requested page range.*)
FUNCTION  PrPageStart (VAR prinsIn: TPrRec;VAR PrPort: TPrPort):TF;                 {.PrSpool}
  {IF False THEN Page out of Range ELSE IF True THEN Page in Range}

(* ----- PrPageEnd   = True, If current page is >= than user requested page range. *)
FUNCTION  PrPageEnd   (VAR prinsIn: TPrRec;VAR PrPort: TPrPort):TF;                 {.PrSpool}
  {IF False THEN Before last Page ELSE IF True THEN Last Page or beyond}

PROCEDURE PrDocEnd    (VAR prinsIn: TPrRec;VAR PrPort: TPrPort);                    {.PrSpool}

{PrMgr Stuff}
{  Init the PrMgr.  Called once per application.
      InitAlerts must be called first. }
PROCEDURE PrMgrInit;                                                                {.PrMgr}

{The PrMgr Dialogs.  These take a PrPrf and return a fNewStl.
     The PrPrf is the document's printer setup, while the fNewStl is
     a flag indicating whether the user's formatting changed.
 A note on the VAR parameters:
     The PrPrf is a "Two-way" VAR  parameter: it both passes data and may be
     modified by a dialog, thus must be initialized.  This can be done in the
     stationery or by a PrPrfDefault call. }

{  The Intended for printer... dialog. }
PROCEDURE PrPrfDlg (VAR prprf: TPrRec; VAR fNewStl: TF; fPgSzSuppress: TF );        {.PrMgr}

{  The Print... dialog; returns the DoIt button. }
FUNCTION  FPrInsDlg(VAR prprf: TPrRec; VAR fNewStl: TF; prmode: PrMenuSuppress): TF;{.PrMgr}

{  Sets flag to stop the spooling process as though the user had typed apple period}
Procedure PrSpoolAbort;                                                             {.PrSpool}

{  The background status dialog. }
PROCEDURE PrBgdDlg;                                                                 {.PrMgr}

{  Set default value for dialogs in cases where dialogs are called inside PrMgr,
     e.g. when PrInsDlg calls PrPrfDlg }                                            {.PrMgr}
PROCEDURE PrDlgDefault(fPgSzSuppress:TF;Prmode:PrMenuSuppress;MaxHeight,MaxWidth,MinHeight,MinWidth:TC);

{  Builds a Long Font ID. }
PROCEDURE PrLFntID(VAR prprf: TPrRec; famIn: TC; setIn: Style; VAR lFntid: TLFntID);{.PrMgr}


{------------------------------------------------------------------------------------------}
                                       IMPLEMENTATION
{------------------------------------------------------------------------------------------}
{$S Pr }

{$IFC PrDebug}
   {$R+}
{$ELSEC}
   {$R-}
{$ENDC}

{$IFC PrSymbols}
   {$D+}
{$ELSEC}
   {$D-}
{$ENDC}

{------------------------------------------------------------------------------------------}

PROCEDURE PsYieldCpu;                                                               EXTERNAL;
PROCEDURE PrGlobalInit;                                                             EXTERNAL;
FUNCTION  FPrPrfValid {( VAR prprf: TPrRec ):TF};                                   EXTERNAL;
PROCEDURE PrPrfDefault{( VAR prprf: TPrRec )};                                      EXTERNAL;
FUNCTION  fPrPrfEq    {( VAR prprf1,prprf2:TPrRec):TF};                             EXTERNAL;
Function  PrDocStart  {( Var PrRec : TPrRec; Var PrPort : TPrPort; LDSN : INTEGER;
                       DoSpoolAlert:Boolean):Boolean};                              EXTERNAl;
FUNCTION  PrPageStart {(VAR prinsIn: TPrRec;VAR PrPort: TPrPort):TF};               EXTERNAL;
FUNCTION  PrPageEnd   {(VAR prinsIn: TPrRec;VAR PrPort: TPrPort):TF};               EXTERNAL;
PROCEDURE PrDocEnd    {(VAR prinsIn: TPrRec;VAR PrPort: TPrPort)};                  EXTERNAL;
PROCEDURE PrMgrInit;                                                                EXTERNAL;
PROCEDURE PrPrfDlg    {(VAR prprf: TPrRec; VAR fNewStl: TF; fPgSzSuppress: TF)};    EXTERNAL;
FUNCTION  FPrInsDlg{(VAR prprf: TPrRec; VAR fNewStl: TF; prmode:PrMenuSuppress):TF};EXTERNAL;
Procedure PrSpoolAbort;                                                             EXTERNAL;
PROCEDURE PrBgdDlg;                                                                 EXTERNAL;
PROCEDURE PrDlgDefault{(fPgSzSuppress:TF;Prmode:PrMenuSuppress;MaxHeight,MaxWidth,MinHeight,MinWidth:TC)};
                                                                                    EXTERNAL;
PROCEDURE PrLFntID{(VAR prprf:TPrRec; famIn: TC;setIn: Style; VAR lFntid: TLFntID)};EXTERNAL;

{------------------------------------------------------------------------------------------}

END. {Unit PrPublic}

{------------------------------------------------------------------------------------------}
{
Unit PrPublic Change Log --
     11/15/83 BH: Created from remnants of PrStd.
     03/07/84 EZ: Added parmameter in PrDocStart. Removed PrCLeanUp.
}



ÿ