;;;;;;;;;;;
;                           {'Copyright 1983, 1984 Apple Computer Inc.'}
;;;;;;;;;;;

        .SEG    "UT"
        .PROC   UTXFERLEFT,10
;--------------------------------------------------------------------------
;
;       (*$S UT *)
;       PROCEDURE XFERLEFT(P1,P2 : PTRDATA;NBYTES : INTEGER);
;
;       DOES A FAST MOVELEFT.  ASSUMES P1,P2 POINT TO WORD BOUNDARIES.
;       NBYTES CAN BE ODD OR EVEN.  DIFFERS FROM MOVELFAST IN THAT MOVES
;       ARE ATTEMPTED IN 4 BYTE CHUNKS WHICH MAY ACTUALLY TAKE MORE TIME
;       BECAUSE OF THE NEED TO ALIGN TO LONG-WORD BOUNDARIES.  ROUTINE
;       IS THE SAME AS MOVELFAST IF THE QUANTITY TO BE MOVED IS <= 7 BYTES
;
;
;       ENTRY POINT AT AMLEFT SHOULD HAVE THE FOLLOWING SETUP
;          NO PARAMETERS ON THE STACK
;          A0   = P2
;          A1   = P1
;          D0   = NBYTES
;          D2   = RETURN ADDRESS
;
;       USES
;               A0,A1
;               D0,D1,D2


        MOVE.L  (SP)+,D2                ;POP RETURN ADDRESS
        MOVE.W  (SP)+,D0                ;D0 := NBYTES
        MOVE.L  (SP)+,A0                ;A0 := P2
        MOVE.L  (SP)+,A1                ;A1 := P1
        MOVE.L  D2,-(SP)                ;PUSH RETURN ADDRESS FOR RTS
        TST     D0
        BLE.S   NOBYTE                  ;IF D0 <= 0, NOTHING TO MOVE

        ;LOAD THE SOURCE INTO A1, DESTINATION INTO A0, LENGTH INTO D0
        CMP     #7,D0
        BLE.S   FWD1                    ;SHORT MOVES GO 1 AT A TIME
        MOVE.L  A1,D2
        ADDQ.L  #2,D2
        CMP.L   A0,D2                   ;IF SOURCE+2 = DEST THEN
        BEQ.S   FWD1
        MOVE    A0,D1                   ;MOVE 1 AT A TIME BECAUSE 4 WON'T PROPAGATE
        AND     #1,D1                   ;D1 = 1 IFF DEST IS ODD
        AND     #1,D2                   ;D2 = 1 IFF SOURCE IS ODD
        ADD     D1,D2
        BEQ.S   @3                      ;SKIP IF BOTH EVEN
        SUBQ    #1,D2
        BEQ.S   FWD1                    ;ONE AT A TIME IF ONE EVEN, ONE ODD
        SUBQ    #1,D0                   ;BOTH OFF, TAKE 1 OFF TOTAL LENGTH
        MOVE.B  (A1)+,(A0)+             ; AND XFER 1 BYTE FIRST
@3      MOVE    D0,D1                   ;SOURCE AND DEST BOTH EVEN OR BOTH ODD
        AND     #3,D0                   ;1 BYTE COUNT
        LSR     #2,D1                   ;4 BYTE COUND
        SUBQ    #1,D1                   ;NON-NEG RESULT SINCE ALWAYS MOVE >= 4
@4      MOVE.L  (A1)+,(A0)+             ;4 BYTE MOVES
        DBF     D1,@4

        ;1 BYTE MOVES

        SUBQ    #1,D0                   ;LENGTH
        BMI.S   NOBYTE                  ;NO SINGLE BYTE TO MOVE
F       MOVE.B  (A1)+,(A0)+
FWD1    DBF     D0,F
NOBYTE  RTS


        .SEG    "UT"
        .PROC   UTXFERRIGHT,10
;--------------------------------------------------------------------------
;
;       (*$S UT *)
;       PROCEDURE XFERRIGHT(P1,P2 : PTRDATA;NBYTES : INTEGER);
;
;       DOES A FAST MOVERIGHT.  ASSUMES P1,P2 POINT TO WORD BOUNDARIES.
;       NBYTES CAN BE ODD OR EVEN.
;
;
;       USES
;               A0,A1
;               D0,D1


        MOVE.L  (SP)+,D1                ;POP RETURN ADDRESS
        MOVE.W  (SP)+,D0                ;D0 := NBYTES
        MOVE.L  (SP)+,A1                ;A1 := P2
        MOVE.L  (SP)+,A0                ;A0 := P1
        MOVE.L  D1,-(SP)                ;PUSH RETURN ADDRESS FOR RTS
        TST.W   D0
        BLE.S   RETURN

        ADDA.W  D0,A0
        ADDA.W  D0,A1

        SUBQ.W  #1,D0
XFER    MOVE.B  -(A0),-(A1)
        DBF     D0,XFER

RETURN  RTS


        .END

ÿ