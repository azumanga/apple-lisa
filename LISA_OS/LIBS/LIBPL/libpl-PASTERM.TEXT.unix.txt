; File: PASTERM.TEXT
; Date: 09-Oct-81

;        .PROC   %%%TERM                ; this introduces another entry point
                                        ; for reusability, comment this out
;        .DEF    %_TERM
        .PROC   %_TERM
        .def    %_HALT

        .include        libpl/paslibdefs.text
        .if     libproducing=appaslib
        .ref    %_CkResident, terminate_process

        .include        libpl/paslibequs.text

;
; %_TERM - Terminate
;

;%_TERM:                                ; comment out since use .proc %_term
        moveq   #1,d4                   ; entry from %_TERM
term
        suba.l  #sizeenvir,sp           ; space for regis for restarting
        clr.w   -(sp)                   ; function result
        pea     2(sp)                   ; address of regis
        jsr     %_CkResident            ; Check whether its resident
        tst.w   (sp)+
        beq     nonresid                ; not resident, no restart
        move.l  (sp)+,a6                ; restore registers for restarting
        move.l  (sp)+,a0                ; pc of PC2Blockiosetup
        move.l  (sp)+,a1                ; return pc of %_INIT
        move.l  (sp)+,sp                ; restore sp
        move.l  a1,(sp)                 ; setup return pc for %_INIT
                ; now the top of stack has return pc of %_init
                ; leave it there so can do rts after done with %_init
        jmp     (a0)                    ; jump to do second blockiosetup in %_init


nonresid
        tst.w   d4                      ; see if from %_TERM
        beq     haltterm
        gentrap #52,#0                  ; trap to Hit_End
                                        ; no return

haltterm
        clr.l   -(sp)                   ; make room for errnum
        move.l  sp,-(sp)                ; @errnum
        clr.l   -(sp)                   ; event_ptr := nil
        jsr     terminate_process       ; terminate_process (errnum, event_ptr)
                                        ; it will not return

;
; %_HALT - Halt
;

%_HALT:
        clr.w   d4                      ; entry to %_HALT       {3.2, YC, 2/28/83}
        bra.s   term                    ;                       {3.2, YC, 2/28/83}

        .endc

        .END

ÿ