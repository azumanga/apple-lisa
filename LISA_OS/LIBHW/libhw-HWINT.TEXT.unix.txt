{
{   File Libhw/HWINT.TEXT
{
{-----------------------------------------------------------------------------
{
{   Pascal Interface to Hardware Interface Routines
{
{   Written by Rick Meyers
{   Copyright 1983, Apple Computer Inc.
{
{-----------------------------------------------------------------------------
{
{   Change Log
{
{   13Oct83     TCW     Export KeyToAscii Routine
}

{$R-}
{$S Drivers}

Unit HwInt;

Intrinsic;

Interface


type

   Ascii           = Char;                           {10Oct83}
   Pixels          = Integer;
   ManyPixels      = LongInt;
   CursorHeight    = Integer;
   CursorPtr       = ^Integer;
   LogicalAddress  = LongInt;
   DateArray       = Record
                       year: Integer;
                       day: Integer;
                       hour: Integer;
                       minute: Integer;
                       second: Integer;
                       end;
   Frames          = LongInt;
   Seconds         = LongInt;
   MilliSeconds    = LongInt;
   MicroSeconds    = LongInt;
   AlarmNumber     = Integer;
   SpeakerVolume   = Integer;
   ScreenContrast  = Integer;
   VisibleScrn     = (PriScrn,AltScrn);
   KeybdQIndex     = 1..1000;
   KeybdId         = Integer;
   KeyCap          = 0..127;
   KeyCapSet       = Set of KeyCap;
   KeyEvent        = Packed Record
                       key: KeyCap;
                       ascii: Char;
                       state: Integer;
                       mouseX: Pixels;
                       mouseY: Pixels;
                       time: MilliSeconds;
                       end;




{ Initialization }

   Procedure DriverInit;
   Procedure DiskDriver (routine: LogicalAddress);
   Procedure TwiggyDriver (routine: LogicalAddress);
   Procedure DiskSync (busy: Boolean);
   Procedure NMISync;
   Procedure COPSSync;
   Procedure Poll;

{ Mouse }

   Procedure MouseLocation (var x: Pixels; var y: Pixels);
   Procedure MouseUpdates (delay: MilliSeconds);
   Procedure MouseScaling (scale: Boolean);
   Procedure MouseThresh (threshold: Pixels);
   Function  MouseOdometer: ManyPixels;

{ Cursor }

   Procedure CursorLocation (x: Pixels; y: Pixels);
   Procedure CursorTracking (track: Boolean);
   Procedure CursorImage (hotX: Pixels; hotY: Pixels; height: CursorHeight;
      data: CursorPtr; mask: CursorPtr);

   Procedure CursorHide;
   Procedure CursorShield (left: Pixels; top: Pixels; right: Pixels;
      bottom: Pixels);
   Procedure CursorDisplay;
   Procedure CursorObscure;
   Procedure CursorInit;
   Procedure CursorReInit;

   Procedure BusyImage (hotX: Pixels; hotY: Pixels; height: CursorHeight;
      data: CursorPtr; mask: CursorPtr);
   Procedure BusyDelay (delay: MilliSeconds);

{ Screen }

   Function  FrameCounter: Frames;

   Procedure ScreenSize (var x: Pixels; var y: Pixels);
   Function  ScreenAddr: LogicalAddress;
   Function  AltScreenAddr: LogicalAddress;

   Function  ScreenKeybd: VisibleScreen;
   Procedure SetScreenKeybd (screen: VisibleScreen);

   Function  Contrast: ScreenContrast;
   Procedure SetContrast (contrast: ScreenContrast);
   Procedure RampContrast (contrast: ScreenContrast);
   Function  DimContrast: ScreenContrast;
   Procedure SetDimContrast (contrast: ScreenContrast);

{ Power }

   Function  FadeDelay: MilliSeconds;
   Procedure SetFadeDelay (delay: MilliSeconds);
   Procedure PowerDown;
   Procedure PowerCycle (delay: Seconds);

{ Speaker }

   Function  Volume: SpeakerVolume;
   Procedure SetVolume (volume: SpeakerVolume);
   Procedure Noise (waveLength: MicroSeconds);
   Procedure Silence;
   Procedure Beep (waveLength: MicroSeconds; duration: MilliSeconds);

{ Keyboard }

   Function  Keyboard: KeybdId;
   Function  Legends: KeybdId;
   Procedure SetLegends (id: KeybdId);
   Function  KeyIsDown (key: KeyCap): Boolean;
   Procedure KeyMap (var keys: KeyCapSet);
   Function  KeybdPeek (repeats: Boolean; index: KeybdQIndex; var event: KeyEvent):
      Boolean;
   Function  AltKeyPeek (repeats: Boolean; index: KeybdQIndex; var event: KeyEvent):
      Boolean;
   Function  KeybdEvent (repeats: Boolean; wait: Boolean; var event: KeyEvent):
      Boolean;
   Function  AltKeyEvent (repeats: Boolean; wait: Boolean; var event: KeyEvent):
      Boolean;
   Procedure RepeatRate (var initial: MilliSeconds; var subsequent: MilliSeconds);
   Procedure SetRepeatRate (initial: MilliSeconds; subsequent: MilliSeconds);
   Procedure KeyPushed (key: KeyCap);
   Function  NMIKey: KeyCap;
   Procedure SetNMIKey (key: KeyCap);
   Function  ToggleKey: KeyCap;
   Procedure SetToggleKey (key: KeyCap);
   Function  KeyToAscii(key: KeyCap; State:Integer): Ascii;                                     {11Oct83}

{ Timers and Alarms }

   Function  MicroTimer: MicroSeconds;
   Function  Timer: MilliSeconds;
   Procedure AlarmAssign (var alarm: AlarmNumber; routine: LogicalAddress);
   Procedure AlarmReturn (alarm: AlarmNumber);
   Procedure AlarmAbsolute (alarm: AlarmNumber; time: MilliSeconds);
   Procedure AlarmRelative (alarm: AlarmNumber; delay: MilliSeconds);
   Procedure AlarmOff (alarm: AlarmNumber);

{ Date and Time }

   Procedure DateTime (var date: DateArray);
   Procedure SetDateTime (date: DateArray);
   Procedure DateToTime (date: DateArray; var time: Seconds);

{ Time Stamp }

   Function  TimeStamp: Seconds;
   Procedure SetTimeStamp (time: Seconds);
   Procedure TimeToDate (time: Seconds; var date: DateArray);


Implementation


{ Initialization }

   Procedure DriverInit; external;
   Procedure DiskDriver; external;
   Procedure TwiggyDriver; external;
   Procedure DiskSync; external;
   Procedure NMISync; external;
   Procedure COPSSync; external;
   Procedure Poll; external;


{ Mouse }

   Procedure MouseLocation; external;
   Procedure MouseUpdates; external;
   Procedure MouseScaling; external;
   Procedure MouseThresh; external;
   Function  MouseOdometer; external;


{ Cursor }

   Procedure CursorLocation; external;
   Procedure CursorTracking; external;
   Procedure CursorImage; external;

   Procedure CursorHide; external;
   Procedure CursorShield; external;
   Procedure CursorDisplay; external;
   Procedure CursorObscure; external;
   Procedure CursorInit; external;
   Procedure CursorReInit; external;

   Procedure BusyImage; external;
   Procedure BusyDelay; external;


{ Screen }

   Function  FrameCounter; external;

   Procedure ScreenSize; external;
   Function  ScreenAddr; external;
   Function  AltScreenAddr; external;


   Function  ScreenKeybd; external;
   Procedure SetScreenKeybd; external;

   Function  Contrast; external;
   Procedure SetContrast; external;
   Procedure RampContrast; external;
   Function  DimContrast; external;
   Procedure SetDimContrast; external;

{ Power }

   Function  FadeDelay; external;
   Procedure SetFadeDelay; external;
   Procedure PowerDown; external;
   Procedure PowerCycle; external;

{ Speaker }

   Function  Volume; external;
   Procedure SetVolume; external;
   Procedure Noise; external;
   Procedure Silence; external;
   Procedure Beep; external;

{ Keyboard }

   Function  Keyboard; external;
   Function  Legends; external;
   Procedure SetLegends; external;
   Function  KeyIsDown; external;
   Procedure KeyMap; external;
   Function  KeybdPeek; external;
   Function  AltKeyPeek; external;
   Function  KeybdEvent; external;
   Function  AltKeyEvent; external;
   Procedure RepeatRate; external;
   Procedure SetRepeatRate; external;
   Procedure KeyPushed; external;
   Function  NMIKey; external;
   Procedure SetNMIKey; external;
   Function  ToggleKey; external;
   Procedure SetToggleKey; external;
   Function  KeyToAscii; external;

{ Timers and Alarms }

   Function  MicroTimer; external;
   Function  Timer; external;
   Procedure AlarmAssign; external;
   Procedure AlarmReturn; external;
   Procedure AlarmAbsolute; external;
   Procedure AlarmRelative; external;
   Procedure AlarmOff; external;

{ Date and Time }

   Procedure DateTime; external;
   Procedure SetDateTime; external;
   Procedure DateToTime; external;

{ Time Stamp }

   Function  TimeStamp; external;
   Procedure SetTimeStamp; external;
   Procedure TimeToDate; external;

end.


ÿ