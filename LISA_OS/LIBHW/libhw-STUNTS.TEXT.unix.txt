{
{
{   File STUNTS.TEXT
{
{-----------------------------------------------------------------------------
{
{   Test and Demonstration -- Lisa Hardware Interface Routines
{
{   Written by Rick Meyers
{   Copyright 1983, Apple Computer Inc.
{
{
}

program stunts;

uses {$U LibHW/hwint.obj} hwint;

const
   returnKey = 72;

var
   initial,subsequent: Milliseconds;
   c: char;
   event: KeyEvent;
   id: KeybdId;
   x,y: Pixels;
   cursor: array [1..32] of integer;
   mask: array [1..32] of integer;
   time: Milliseconds;
   date: DateArray;
   sec,sec1: Seconds;
   beepAlarm: AlarmNumber;



procedure FirstTests;
   var
      i: integer;

   begin
   writeln;

   writeln('Initialization Test');
   SetNMIKey(33);
   writeln('   The ''-'' key (right of CLEAR) has been programmed to generate NMI.');
   writeln('   The NMI key is keycode $21 (',NMIKey:1,').');
   writeln;

   SetToggleKey(47);
   writeln('   The keypad ''Enter'' key has been specified as the screen/keyboard toggle.');
   writeln('   The Toggle key is keycode $2F (',ToggleKey:1,').');
   writeln;

   writeln('Display Screens');
   writeln('   The primary screen is located at ',ScreenAddr:1,'.');
   writeln('   The alternate screen is located at ',AltScreenAddr:1,'.');
   if ScreenKeybd = PriScrn then
      begin
      writeln('   The primary screen is currently visible.');
      end
   else
      begin
      writeln('   The alternate screen is currently visible.');
      end;
   write  ('   Hit <Return> to toggle to the alternate screen for 5 seconds.');
   readln;
   SetScreenKeybd (AltScrn);
   time := Timer;
   while Timer < time + 5000 do
      begin
      end;
   SetScreenKeybd (PriScrn);
   writeln('   We should be back to the primary screen.');
   writeln;

   writeln('Fade Dalay');
   SetFadeDelay(15000);
   writeln('   The fade delay has been set to 15 seconds (',
      FadeDelay:1,' milliseconds).');
   writeln;

   writeln('Repeat Rate');
   SetRepeatRate(400,100);
   RepeatRate(initial,subsequent);
   writeln('   The initial repeat rate has been set to .4 seconds (',
      initial:1,' milliseconds).');
   writeln('   The subsequent repeat rate has been set to .1 seconds (',
      subsequent:1,' milliseconds).');
   writeln;

   writeln('Mouse Odometer');
   writeln('   The mouse odometer reads ',MouseOdometer:1,' pixels.');
   writeln('   That''s about ',(MouseOdometer div 180):1,' inches.');
   writeln;

   writeln('Frame Counter');
   writeln('   The frame counter is at  ',FrameCounter:1,'.');
   writeln('   Now the frame counter is ',FrameCounter:1,'.');
   writeln;

   writeln('Millisecond Timer');
   writeln('   The millisecond timer is at  ',Timer:1,'.');
   writeln('   Now the millisecond timer is ',Timer:1,'.');
   writeln;

   writeln('MicroSecond Timer');
   writeln('   The microsecond timer is at  ',MicroTimer:1,'.');
   writeln('   Now the microsecond timer is ',MicroTimer:1,'.');
   writeln;

   writeln('Primary Keyboard');
   writeln('   Keyboard type-ahead.');
   i := 1;
   while KeybdPeek(true,i,event) do
      begin
      writeln('      Peek (',event.ascii,') key: ',event.key:3,' state: ',
         event.state:3,' X: ',event.mouseX:3,' Y: ',event.mouseY:3,
         ' time: ',event.time:1);
      i := i + 1;
      end;
   writeln('   Keyboard event test.  Type for awhile.');
   writeln('   Hit <Return> to stop.');
   while KeybdEvent (true,true,event) and (event.key <> returnKey) do
      begin
      writeln('      Event(',event.ascii,') key: ',event.key:3,' state: ',
         event.state:3,' X: ',event.mouseX:3,' Y: ',event.mouseY:3,
         ' time: ',event.time:1);
      end;
   writeln;

   writeln('Alternate Keyboard');
   writeln('   Alternate keyboard type-ahead.');
   i := 1;
   while AltKeyPeek(true,i,event) do
      begin
      writeln('      Peek (',event.ascii,') key: ',event.key:3,' state: ',
         event.state:3,' X: ',event.mouseX:3,' Y: ',event.mouseY:3,
         ' time: ',event.time:1);
      i := i + 1;
      end;
   writeln('   Alternate keyboard event test.  Type on the alternate keyboard.');
   writeln('   Hit <Return> on the alternate keyboard to stop.');
   while AltKeyEvent (true,true,event) and (event.key <> returnKey) do
      begin
      writeln('      Event(',event.ascii,') key: ',event.key:3,' state: ',
         event.state:3,' X: ',event.mouseX:3,' Y: ',event.mouseY:3,
         ' time: ',event.time:1);
      end;
   write  ('   Now hit <Return> on the primary keyboard.');
   readln;
   writeln;

   writeln('Keyboard Layouts and Legends');
   writeln('   15 ($0F)  --  Old US Layout');
   writeln('   38 ($26)  --  Swiss-German Layout');
   writeln('   43 ($2B)  --  Swedish Layout');
   writeln('   44 ($2C)  --  Italian Layout');
   writeln('   45 ($2D)  --  French Layout');
   writeln('   46 ($2E)  --  German Layout');
   writeln('   47 ($2F)  --  UK Layout');
   writeln('   62 ($3E)  --  Dvorak Layout');
   writeln('   63 ($3F)  --  Final US Layout');
   writeln;
   write  ('   Keyboard layout/legends?  ');
   readln(id);
   writeln;
   SetLegends(id);
   writeln('   The keyboard id is ',Keyboard:1,'.');
   writeln('   The layout/legends is ',Legends:1,'.');
   writeln;

   writeln('Cursor and Mouse');
   for i := 1 to 32 do
      begin
      cursor[i] := $EDB7;
      mask[i] := $0000;
      end;
   CursorInit;
   CursorImage(8,16,32,@cursor[1],@mask[1]);
   CursorTracking(false);
   CursorLocation(360,180);
   CursorTracking(true);
   writeln('  A big transparent cursor has been placed at 360, 180.');
   MouseLocation(x,y);
   writeln('  Its now at ',x:1,', ',y:1,'.');
   MouseScaling(true);
   MouseThreshold(8);
   MouseUpdates(28);
   writeln('  The mouse delay has been set to 28 milliseconds.');
   write('  Hit <Return> to reset the delay to 16 milliseconds.');
   readln;
   MouseUpdates(16);
   CursorObscure;
   writeln('  The cursor has been obscured.');
   writeln('  Moving the mouse should cause it to reappear.');
   write  ('  Hit <Return> to go on to the next test.');
   readln;
   writeln;

   writeln('Busy Cursor');
   for i := 1 to 32 do
      begin
      cursor[i] := $FFFF;
      mask[i] := $0000;
      end;
   BusyImage(8,16,32,@cursor[1],@mask[1]);
   writeln('   The busy cursor is all black, but inverting.');
   writeln('   It will appear if you stop typing for 5 seconds.');
   write('   Hit <Return> to go on to the next stunt.  ');
   repeat
      BusyDelay(5000);
   until keybdEvent(true,true,event) and (event.key = returnKey);
   CursorReInit;
   writeln;
   writeln;

   writeln('Screen Dimensions');
   ScreenSize(x,y);
   writeln('   The screen dimensions are ',x:1,' by ',y:1,'.');
   writeln;

   writeln('Contrast Control');
   SetContrast(176);
   writeln('   The contrast has been set to $B0 (',
      Contrast:1,').');
   write  ('   Hit <Return> to ramp the contrast back to $80.');
   readln;
   RampContrast(128);
   SetDimContrast(176);
   writeln('   The dim contrast setting has been set to $B0 (',
      DimContrast:1,').');
   writeln;

   writeln('Speaker Test');
   writeln('   Position the mouse and push the mouse button.');
   writeln('   The horizontal coordinate determines pitch.');
   writeln('   The vertical coordinate determines volume.');
   writeln('   Hit <Return> to end this silly game.');
   while not KeyIsDown(returnkey) do
      begin
      MouseLocation(x,y);
      SetVolume(y div 46);
      Noise((820-x)*10);
      end;
   readln;
   Silence;
   writeln('   The final volume was ',Volume:1,'.');
   writeln;
   end;

procedure SecondTests;
   var
      i: integer;

   begin
   writeln('Reading Clock/Calendar');
   DateTime(date);
   writeln('   The year   is ',date.year:1,'.');
   writeln('   The day    is ',date.day:1,'.');
   writeln('   The hour   is ',date.hour:1,'.');
   writeln('   The minute is ',date.minute:1,'.');
   writeln('   The second is ',date.second:1,'.');
   writeln;

   writeln('Setting Clock/Calendar');
   write('   Would you like to set the date and time (y/n)? ');
   read(c);
   writeln;
   if (c = 'y') or (c = 'Y') then
      begin
      write('   Year?   ');
      readln(date.year);
      write('   Day?    ');
      readln(date.day);
      write('   Hour?   ');
      readln(date.hour);
      write('   Minute? ');
      readln(date.minute);
      write('   Second? ');
      readln(date.second);
      DateToTime(date,sec);
      writeln('   The specified time stamp is ',sec:1,'.');
      SetDateTime(date);
      end;
   writeln;

   writeln('Reading Time Stamp');
   writeln('   The current time stamp is ',TimeStamp:1,'.');
   writeln;

   writeln('Setting Time Stamp');
   write('   Would you like to set the time stamp (y/n)? ');
   read(c);
   writeln;
   if (c = 'y') or (c = 'Y') then
      begin
      write('   Time stamp? ');
      readln(sec);
      TimeToDate(sec,date);
      writeln('   The specified year   is ',date.year:1,'.');
      writeln('   The specified day    is ',date.day:1,'.');
      writeln('   The specified hour   is ',date.hour:1,'.');
      writeln('   The specified minute is ',date.minute:1,'.');
      writeln('   The specified second is ',date.second:1,'.');
      SetTimeStamp(sec);
      end;
   writeln;

   writeln('Power Control');
   write('   Would you like to turn the power off (y/n)? ');
   read(c);
   writeln;
   if (c = 'y') or (c = 'Y') then
      begin
      write('   Would you like it to automatically come back on (y/n)? ');
      read(c);
      writeln;
      if (c = 'y') or (c = 'Y') then
         begin
         write('   Seconds before automatic power-on? ');
         readln(sec);
         writeln('   Off we go!');
         PowerCycle(sec);
         end
      else
         begin
         writeln('   Off we go!');
         PowerDown;
         end;
      end;
   writeln;

   CursorHide;
   writeln('Bye.');
   end;

begin
FirstTests;
SecondTests;
end.



ÿ