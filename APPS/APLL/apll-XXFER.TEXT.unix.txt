; UNIT XXFER; {Copyright 1983, Apple Computer, Inc.}

; {changed 9/13/83 1115   RELEASE TK7D TO TOOLKIT TEAM}
; {changed 8/30/83 2000   RELEASE TK7C TO TOOLKIT TEAM}

        .SEG    'lmscrap'

        .PROC XFERLEFT

; PROCEDURE XferLeft(source, dest: TP; nBytes: INTEGER);
;
; uses A0,A1,D0,D1
;

        MOVE.L  (SP)+,D1        ; POP RETURN ADDRESS
        MOVE.W  (SP)+,D0        ; D0 := NBYTES
        MOVE.L  (SP)+,A1        ; A1 := DEST
        MOVE.L  (SP)+,A0        ; A0 := SOURCE
        MOVE.L  D1,-(SP)        ; PUSH RETURN ADDRESS FOR RTS

        SUBQ.W  #1,D0           ; DECREMENT NBYTES

        BLT.S   RTSLEFT         ; NBYTES <= 0, SO EXIT

XFER    MOVE.B  (A0)+,(A1)+
        DBF     D0,XFER

RTSLEFT RTS



        .PROC XFERRIGH

; PROCEDURE XferRight(source, dest: TP; nBytes: INTEGER);
;
; uses A0,A1,D0,D1
;

        MOVE.L  (SP)+,D1        ; POP RETURN ADDRESS
        MOVE.W  (SP)+,D0        ; D0 := NBYTES
        MOVE.L  (SP)+,A1        ; A1 := DEST
        MOVE.L  (SP)+,A0        ; A0 := SOURCE
        MOVE.L  D1,-(SP)        ; PUSH RETURN ADDRESS FOR RTS

        TST.W   D0              ; TEST NBYTES
        BLE.S   RTSRIGH         ; NBYTES <= 0, SO EXIT

        ADDA.W  D0,A0           ; START AT RIGHT END
        ADDA.W  D0,A1

        SUBQ.W  #1,D0           ; DECREMENT NBYTES

XFER    MOVE.B  -(A0),-(A1)
        DBF     D0,XFER

RTSRIGH RTS


        .END
ÿ