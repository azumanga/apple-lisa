;=======================================================================
          .FUNC     ConvertLanguage
;=======================================================================
;
;
;
;FUNCTION  ConvertLanguage(ch: CHAR; language: INTEGER): CHAR;
;
;Returns the international ascii for international Lisa Characters.  If the character is not
;in the international character set then convertlanguage returns an FF.
;-----------------------------------------------------------------------
;
TableLen  .EQU      23
;-----------------------------------------------------------------------
;
          MOVE.L    (SP)+,A1            ;Fetch return address
          MOVE.W    (SP)+,D0            ;fetch language
          MOVE.W    (SP)+,D1            ;Character to be converted
;
          MULU      #TableLen,D0
          LEA       theTable+tableLen(d0),A0     ;Point A0 to table
          MOVEQ     #TableLen-1,D2      ;Loop counter
;
@1        CMP.B     -(A0),D1
          DBEQ      d2,@1
          BNE       @2
          LEA       theTable(D2),A0
;         CLR.W     D1                  ;Zap high byte
          MOVE.B    (A0),D1
;
@2        MOVE.W    D1,(SP)
          MOVE.L    A1,-(SP)            ;Restore return address
          RTS
;=======================================================================
          .DEF      ConvertAscii
;=======================================================================
;
;
;
;FUNCTION  ConvertAscii(ch: CHAR; language: INTEGER): CHAR;
;
;Changes ascii to a Lisa international character.
;-----------------------------------------------------------------------
;
ConvertA  MOVE.L    (SP)+,A1            ;Fetch return address
          MOVE.W    (SP)+,D0            ;fetch language
          MOVE.W    (SP)+,D1            ;Character to be converted
;
          MULU      #TableLen,D0
          LEA       theTable+tableLen,A0     ;Point A0 to table
          MOVEQ     #TableLen-1,D2      ;Loop counter
;
@1        CMP.B     -(A0),D1
          DBEQ      d2,@1
          BNE       @2
          ADD.W     D0,D2
          LEA       theTable(D2),A0
;         CLR.W     D1                  ;Zap high byte
          MOVE.B    (A0),D1
;
@2        MOVE.W    D1,(SP)
          MOVE.L    A1,-(SP)            ;Restore return address
          RTS

;US ASCII
TheTable  .BYTE     $23,$26,$40,$5B,$5C,$5D,$5E,$60,$7B,$7C,$7D,$7E,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
;
          .ASCII    '£&@[\]^`{|}~###########'                ;UK
;
          .ASCII    '#&ÉÄÖÅÜéäöåü@[\]^`{|}~~'                ;Swedish/Finnish E47
;
          .ASCII    '#&@ÄÖÅ^`äöå~[\]{|}}}}}}'                ;Swedish/Finnish D47
;
          .ASCII    '#&@ÆØÅ^`æøå~[\]{|}}}}}}'                ;Norwegian
;
          .ASCII    '#&@ÆØÅ^`æøå~[\]{|}}}}}}'                ;Danish
;
          .ASCII    '#&§ÄÖÜ^`äöüß@[\]{|}~~~~'                ;German
;
          .ASCII    '#ëàâçêîôéùèû&@[\]^`{|}~'                ;French
;
          .ASCII    '#&àâçêîôéùèû[\]^`{|}~~~'                ;French-Canadian
;
          .ASCII    '¿|á[Ñ]^éíñóú#&@\`{|}~~~'                ;Spanish
;
          .ASCII    '£&§°çé^ùàòèì#@[\]`{|}~~'                ;Italian
;
          .ASCII    '#&@[\]^`{|}~~~~~~~~~~~~'                ;Yugoslavian
;
;=======================================================================
          .END

ˇ